{"version":3,"file":"static/js/476.71a4ab83.chunk.js","mappings":"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","sources":["../node_modules/@polkadot/util/hex/toU8a.js","../node_modules/@polkadot/x-global/index.js","../node_modules/@polkadot/x-bigint/index.js","../node_modules/@polkadot/util/has.js","../node_modules/@polkadot/util/is/hex.js","../node_modules/@polkadot/util/is/u8a.js","../node_modules/@polkadot/x-textencoder/browser.js","../node_modules/@polkadot/util/string/toU8a.js","../node_modules/@polkadot/x-textencoder/fallback.js","../node_modules/@polkadot/util/u8a/toU8a.js","../node_modules/@polkadot/util/is/buffer.js","../node_modules/@polkadot/util/is/function.js","../node_modules/@polkadot/util/u8a/eq.js","../node_modules/@polkadot/util/u8a/concat.js","../node_modules/@scure/base/lib/esm/index.js","../node_modules/@polkadot/util-crypto/base58/bs58.js","../node_modules/@polkadot/util-crypto/base32/helpers.js","../node_modules/@noble/hashes/esm/_assert.js","../node_modules/@noble/hashes/esm/utils.js","../node_modules/@noble/hashes/esm/cryptoBrowser.js","../node_modules/@noble/hashes/esm/_blake2.js","../node_modules/@noble/hashes/esm/_u64.js","../node_modules/@noble/hashes/esm/blake2b.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/checkPrivateRedeclaration.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classExtractFieldDescriptor.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classApplyDescriptorGet.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classPrivateFieldSet.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classApplyDescriptorSet.js","../node_modules/@polkadot/x-textdecoder/browser.js","../node_modules/@polkadot/util/u8a/toString.js","../node_modules/@polkadot/x-textdecoder/fallback.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@polkadot/wasm-bridge/wbg.js","../node_modules/@polkadot/x-randomvalues/browser.js","../node_modules/@polkadot/wasm-util/fflate.js","../node_modules/@polkadot/wasm-util/base64.js","../node_modules/@polkadot/wasm-crypto-wasm/bundle.js","../node_modules/@polkadot/wasm-crypto-init/wasm.js","../node_modules/@polkadot/wasm-bridge/init.js","../node_modules/@polkadot/wasm-crypto/init.js","../node_modules/@polkadot/wasm-bridge/bridge.js","../node_modules/@polkadot/wasm-crypto/bundle.js","../node_modules/@polkadot/util/u8a/toHex.js","../node_modules/@polkadot/util-crypto/blake2/asU8a.js","../node_modules/@polkadot/util-crypto/address/sshash.js","../node_modules/@polkadot/util-crypto/address/checksum.js","../node_modules/@substrate/ss58-registry/esm/index.js","../node_modules/@polkadot/networks/defaults/ledger.js","../node_modules/@polkadot/networks/defaults/genesis.js","../node_modules/@polkadot/networks/defaults/icons.js","../node_modules/@polkadot/networks/defaults/testnets.js","../node_modules/@polkadot/networks/interfaces.js","../node_modules/@polkadot/util-crypto/address/defaults.js","../node_modules/@polkadot/util-crypto/address/decode.js","../node_modules/@polkadot/util-crypto/address/encode.js","../node_modules/@polkadot/extension-dapp/util.js","../node_modules/@polkadot/extension-dapp/packageInfo.js","../node_modules/@polkadot/util/u8a/wrap.js","../node_modules/@polkadot/extension-dapp/wrapBytes.js","../node_modules/@polkadot/extension-dapp/bundle.js"],"sourcesContent":["// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst CHR = '0123456789abcdef';\nconst U8 = new Array(256);\nconst U16 = new Array(256 * 256);\n\nfor (let i = 0; i < CHR.length; i++) {\n  U8[CHR[i].charCodeAt(0) | 0] = i | 0;\n\n  if (i > 9) {\n    U8[CHR[i].toUpperCase().charCodeAt(0) | 0] = i | 0;\n  }\n}\n\nfor (let i = 0; i < 256; i++) {\n  const s = i << 8;\n\n  for (let j = 0; j < 256; j++) {\n    U16[s | j] = U8[i] << 4 | U8[j];\n  }\n}\n/**\n * @name hexToU8a\n * @summary Creates a Uint8Array object from a hex string.\n * @description\n * `null` inputs returns an empty `Uint8Array` result. Hex input values return the actual bytes value converted to a Uint8Array. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToU8a } from '@polkadot/util';\n *\n * hexToU8a('0x80001f'); // Uint8Array([0x80, 0x00, 0x1f])\n * hexToU8a('0x80001f', 32); // Uint8Array([0x00, 0x80, 0x00, 0x1f])\n * ```\n */\n\n\nexport function hexToU8a(value, bitLength = -1) {\n  if (!value) {\n    return new Uint8Array();\n  }\n\n  let s = value.startsWith('0x') ? 2 : 0;\n  const decLength = Math.ceil((value.length - s) / 2);\n  const endLength = Math.ceil(bitLength === -1 ? decLength : bitLength / 8);\n  const result = new Uint8Array(endLength);\n  const offset = endLength > decLength ? endLength - decLength : 0;\n\n  for (let i = offset; i < endLength; i++, s += 2) {\n    // The big factor here is actually the string lookups. If we do\n    // HEX_TO_U16[value.substring()] we get an 10x slowdown. In the\n    // same vein using charCodeAt (as opposed to value[s] or value.charAt(s)) is\n    // also the faster operation by at least 2x with the character map above\n    result[i] = U16[value.charCodeAt(s) << 8 | value.charCodeAt(s + 1)];\n  }\n\n  return result;\n}","// Copyright 2017-2022 @polkadot/x-global authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport { packageInfo } from \"./packageInfo.js\"; // Ensure that we are able to run this without any @types/node definitions\n// and without having lib: ['dom'] in our TypeScript configuration\n// (may not be available in all environments, e.g. Deno springs to mind)\n\nfunction evaluateThis(fn) {\n  return fn('return this');\n}\n\nexport const xglobal = typeof globalThis !== 'undefined' ? globalThis : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : evaluateThis(Function);\nexport function extractGlobal(name, fallback) {\n  // Not quite sure why this is here - snuck in with TS 4.7.2 with no real idea\n  // (as of now) as to why this looks like an \"any\" when we do cast it to a T\n  //\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n  return typeof xglobal[name] === 'undefined' ? fallback : xglobal[name];\n}\nexport function exposeGlobal(name, fallback) {\n  if (typeof xglobal[name] === 'undefined') {\n    xglobal[name] = fallback;\n  }\n}","// Copyright 2017-2022 @polkadot/x-bigint authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { xglobal } from '@polkadot/x-global';\nexport { packageInfo } from \"./packageInfo.js\";\nexport const BigInt = typeof xglobal.BigInt === 'function' && typeof xglobal.BigInt.asIntN === 'function' ? xglobal.BigInt : () => Number.NaN;","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { BigInt } from '@polkadot/x-bigint'; // Since we run in very different environments, we have to ensure we have all\n// the types used here for detection (some of these may require Node definitions,\n// which are not available in Deno/browser)\n\n/** true if the environment has proper BigInt support */\nexport const hasBigInt = typeof BigInt === 'function' && typeof BigInt.asIntN === 'function';\n/** true if the environment has support for Buffer */\n\nexport const hasBuffer = typeof Buffer !== 'undefined';\n/** true if the environment is CJS */\n\nexport const hasCjs = typeof require === 'function' && typeof module !== 'undefined';\n/** true if the environment has __dirname available */\n\nexport const hasDirname = typeof __dirname !== 'undefined';\n/** true if the environment is ESM */\n\nexport const hasEsm = !hasCjs;\n/** true if the environment has process available (typically Node.js) */\n\nexport const hasProcess = typeof process === 'object';\n/** true if the environment has WebAssembly available */\n\nexport const hasWasm = typeof WebAssembly !== 'undefined';","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport const REGEX_HEX_PREFIXED = /^0x[\\da-fA-F]+$/;\nexport const REGEX_HEX_NOPREFIX = /^[\\da-fA-F]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */\n\nexport function isHex(value, bitLength = -1, ignoreLength) {\n  return typeof value === 'string' && (value === '0x' || REGEX_HEX_PREFIXED.test(value)) && (bitLength === -1 ? ignoreLength || value.length % 2 === 0 : value.length === 2 + Math.ceil(bitLength / 4));\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name isU8a\n * @summary Tests for a `Uint8Array` object instance.\n * @description\n * Checks to see if the input object is an instance of `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUint8Array } from '@polkadot/util';\n *\n * console.log('isU8a', isU8a([])); // => false\n * ```\n */\nexport function isU8a(value) {\n  // here we defer the instanceof check which is actually slightly\n  // slower than just checking the constrctor (direct instances)\n  return (value && value.constructor) === Uint8Array || value instanceof Uint8Array;\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { extractGlobal } from '@polkadot/x-global';\nimport { TextEncoder as Fallback } from \"./fallback.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nexport const TextEncoder = extractGlobal('TextEncoder', Fallback);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { TextEncoder } from '@polkadot/x-textencoder';\nconst encoder = new TextEncoder();\n/**\n * @name stringToU8a\n * @summary Creates a Uint8Array object from a utf-8 string.\n * @description\n * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringToU8a } from '@polkadot/util';\n *\n * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]\n * ```\n */\n\nexport function stringToU8a(value) {\n  return value ? encoder.encode(value.toString()) : new Uint8Array();\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// This is very limited, only handling Ascii values\nexport class TextEncoder {\n  encode(value) {\n    const u8a = new Uint8Array(value.length);\n\n    for (let i = 0; i < value.length; i++) {\n      u8a[i] = value.charCodeAt(i);\n    }\n\n    return u8a;\n  }\n\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hexToU8a } from \"../hex/toU8a.js\";\nimport { isBuffer } from \"../is/buffer.js\";\nimport { isHex } from \"../is/hex.js\";\nimport { isU8a } from \"../is/u8a.js\";\nimport { stringToU8a } from \"../string/toU8a.js\";\n/**\n * @name u8aToU8a\n * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.\n * @description\n * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToU8a } from '@polkadot/util';\n *\n * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])\n * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])\n * ```\n */\n\nexport function u8aToU8a(value) {\n  return isU8a(value) ? value : isHex(value) ? hexToU8a(value) : isBuffer(value) || Array.isArray(value) ? new Uint8Array(value) : stringToU8a(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { hasBuffer } from \"../has.js\";\nimport { isFunction } from \"./function.js\";\n/**\n * @name isBuffer\n * @summary Tests for a `Buffer` object instance.\n * @description\n * Checks to see if the input object is an instance of `Buffer`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBuffer } from '@polkadot/util';\n *\n * console.log('isBuffer', isBuffer(Buffer.from([]))); // => true\n * ```\n */\n\nexport function isBuffer(value) {\n  // we do check a function first, since it is slightly faster than isBuffer itself\n  return hasBuffer && isFunction(value && value.readDoubleLE) && Buffer.isBuffer(value);\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// eslint-disable-next-line @typescript-eslint/ban-types\n\n/**\n * @name isFunction\n * @summary Tests for a `function`.\n * @description\n * Checks to see if the input value is a JavaScript function.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isFunction } from '@polkadot/util';\n *\n * isFunction(() => false); // => true\n * ```\n */\nexport function isFunction(value) {\n  return typeof value === 'function';\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"./toU8a.js\";\n/**\n * @name u8aEq\n * @summary Compares two Uint8Arrays for equality.\n * @description\n * For `UInt8Array` (or hex string) input values true if there is a match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\n\nexport function u8aEq(a, b) {\n  const u8aa = u8aToU8a(a);\n  const u8ab = u8aToU8a(b);\n\n  if (u8aa.length === u8ab.length) {\n    const dvA = new DataView(u8aa.buffer, u8aa.byteOffset);\n    const dvB = new DataView(u8ab.buffer, u8ab.byteOffset);\n    const mod = u8aa.length % 4 | 0;\n    const length = u8aa.length - mod | 0;\n\n    for (let i = 0; i < length; i += 4) {\n      if (dvA.getUint32(i) !== dvB.getUint32(i)) {\n        return false;\n      }\n    }\n\n    for (let i = length; i < u8aa.length; i++) {\n      if (u8aa[i] !== u8ab[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from \"./toU8a.js\";\n/**\n * @name u8aConcat\n * @summary Creates a concatenated Uint8Array from the inputs.\n * @description\n * Concatenates the input arrays into a single `UInt8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aConcat } from '@polkadot/util';\n *\n * u8aConcat(\n *   new Uint8Array([1, 2, 3]),\n *   new Uint8Array([4, 5, 6])\n * ); // [1, 2, 3, 4, 5, 6]\n * ```\n */\n\nexport function u8aConcat(...list) {\n  const u8as = new Array(list.length);\n  let length = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    u8as[i] = u8aToU8a(list[i]);\n    length += u8as[i].length;\n  }\n\n  return u8aConcatStrict(u8as, length);\n}\n/**\n * @name u8aConcatStrict\n * @description A strict version of [[u8aConcat]], accepting only Uint8Array inputs\n */\n\nexport function u8aConcatStrict(u8as, length = 0) {\n  let offset = 0;\n\n  if (!length) {\n    for (let i = 0; i < u8as.length; i++) {\n      length += u8as[i].length;\n    }\n  }\n\n  const result = new Uint8Array(length);\n\n  for (let i = 0; i < u8as.length; i++) {\n    result.set(u8as[i], offset);\n    offset += u8as[i].length;\n  }\n\n  return result;\n}","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base58 } from '@scure/base';\nimport { createDecode, createEncode, createIs, createValidate } from \"../base32/helpers.js\";\nconst config = {\n  chars: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n  coder: base58,\n  ipfs: 'z',\n  type: 'base58'\n};\n/**\n * @name base58Validate\n * @summary Validates a base58 value.\n * @description\n * Validates that the supplied value is valid base58, throwing exceptions if not\n */\n\nexport const base58Validate = createValidate(config);\n/**\n * @name base58Decode\n * @summary Decodes a base58 value.\n * @description\n * From the provided input, decode the base58 and return the result as an `Uint8Array`.\n */\n\nexport const base58Decode = createDecode(config, base58Validate);\n/**\n* @name base58Encode\n* @summary Creates a base58 value.\n* @description\n* From the provided input, create the base58 and return the result as a string.\n*/\n\nexport const base58Encode = createEncode(config);\n/**\n* @name isBase58\n* @description Checks if the input is in base58, returning true/false\n*/\n\nexport const isBase58 = createIs(base58Validate);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aToU8a } from '@polkadot/util'; // re-export the type so *.d.ts files don't have ../src imports\n\n/** @internal */\nexport function createDecode({\n  coder,\n  ipfs\n}, validate) {\n  return (value, ipfsCompat) => {\n    validate(value, ipfsCompat);\n    return coder.decode(ipfs && ipfsCompat ? value.substring(1) : value);\n  };\n}\n/** @internal */\n\nexport function createEncode({\n  coder,\n  ipfs\n}) {\n  return (value, ipfsCompat) => {\n    const out = coder.encode(u8aToU8a(value));\n    return ipfs && ipfsCompat ? `${ipfs}${out}` : out;\n  };\n}\n/** @internal */\n\nexport function createIs(validate) {\n  return (value, ipfsCompat) => {\n    try {\n      return validate(value, ipfsCompat);\n    } catch (error) {\n      return false;\n    }\n  };\n}\n/** @internal */\n\nexport function createValidate({\n  chars,\n  ipfs,\n  type\n}) {\n  return (value, ipfsCompat) => {\n    if (!value || typeof value !== 'string') {\n      throw new Error(`Expected non-null, non-empty ${type} string input`);\n    }\n\n    if (ipfs && ipfsCompat && value[0] !== ipfs) {\n      throw new Error(`Expected ipfs-compatible ${type} to start with '${ipfs}'`);\n    }\n\n    for (let i = ipfsCompat ? 1 : 0; i < value.length; i++) {\n      if (!(chars.includes(value[i]) || value[i] === '=' && (i === value.length - 1 || !chars.includes(value[i + 1])))) {\n        throw new Error(`Invalid ${type} character \"${value[i]}\" (0x${value.charCodeAt(i).toString(16)}) at index ${i}`);\n      }\n    }\n\n    return true;\n  };\n}","export function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexport function bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nexport function bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new TypeError('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nexport function hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nexport function exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nexport function output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nconst assert = {\n    number,\n    bool,\n    bytes,\n    hash,\n    exists,\n    output,\n};\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Uint8Array expected');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n        throw new TypeError('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto.web) {\n        return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto.node) {\n        return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\n","export const crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import assert from './_assert.js';\nimport { Hash, toBytes, u32 } from './utils.js';\n// prettier-ignore\nexport const SIGMA = new Uint8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n    // For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n]);\nexport class BLAKE2 extends Hash {\n    constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.length = 0;\n        this.pos = 0;\n        this.finished = false;\n        this.destroyed = false;\n        assert.number(blockLen);\n        assert.number(outputLen);\n        assert.number(keyLen);\n        if (outputLen < 0 || outputLen > keyLen)\n            throw new Error('Blake2: outputLen bigger than keyLen');\n        if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen))\n            throw new Error(`Key should be up 1..${keyLen} byte long or undefined`);\n        if (opts.salt !== undefined && opts.salt.length !== saltLen)\n            throw new Error(`Salt should be ${saltLen} byte long or undefined`);\n        if (opts.personalization !== undefined && opts.personalization.length !== persLen)\n            throw new Error(`Personalization should be ${persLen} byte long or undefined`);\n        this.buffer32 = u32((this.buffer = new Uint8Array(blockLen)));\n    }\n    update(data) {\n        assert.exists(this);\n        // Main difference with other hashes: there is flag for last block,\n        // so we cannot process current block before we know that there\n        // is the next one. This significantly complicates logic and reduces ability\n        // to do zero-copy processing\n        const { blockLen, buffer, buffer32 } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            // If buffer is full and we still have input (don't process last block, same as blake2s)\n            if (this.pos === blockLen) {\n                this.compress(buffer32, 0, false);\n                this.pos = 0;\n            }\n            const take = Math.min(blockLen - this.pos, len - pos);\n            const dataOffset = data.byteOffset + pos;\n            // full block && aligned to 4 bytes && not last in input\n            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\n                const data32 = new Uint32Array(data.buffer, dataOffset, Math.floor((len - pos) / 4));\n                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\n                    this.length += blockLen;\n                    this.compress(data32, pos32, false);\n                }\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            this.length += take;\n            pos += take;\n        }\n        return this;\n    }\n    digestInto(out) {\n        assert.exists(this);\n        assert.output(out, this);\n        const { pos, buffer32 } = this;\n        this.finished = true;\n        // Padding\n        this.buffer.subarray(pos).fill(0);\n        this.compress(buffer32, 0, true);\n        const out32 = u32(out);\n        this.get().forEach((v, i) => (out32[i] = v));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        const { buffer, length, finished, destroyed, outputLen, pos } = this;\n        to || (to = new this.constructor({ dkLen: outputLen }));\n        to.set(...this.get());\n        to.length = length;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.outputLen = outputLen;\n        to.buffer.set(buffer);\n        to.pos = pos;\n        return to;\n    }\n}\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nexport function split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nexport const toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h, l) => l;\nconst rotr32L = (h, l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","import { BLAKE2, SIGMA } from './_blake2.js';\nimport u64 from './_u64.js';\nimport { toBytes, u32, wrapConstructorWithOpts } from './utils.js';\n// Same as SHA-512 but LE\n// prettier-ignore\nconst IV = new Uint32Array([\n    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n]);\n// Temporary buffer\nconst BUF = new Uint32Array(32);\n// Mixing function G splitted in two halfs\nfunction G1(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore\n    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore\n    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore\n    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 32)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotr32H(Dh, Dl), Dl: u64.rotr32L(Dh, Dl) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 24)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrSH(Bh, Bl, 24), Bl: u64.rotrSL(Bh, Bl, 24) });\n    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);\n    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);\n    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);\n    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);\n}\nfunction G2(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BUF[2 * a], Ah = BUF[2 * a + 1]; // prettier-ignore\n    let Bl = BUF[2 * b], Bh = BUF[2 * b + 1]; // prettier-ignore\n    let Cl = BUF[2 * c], Ch = BUF[2 * c + 1]; // prettier-ignore\n    let Dl = BUF[2 * d], Dh = BUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 16)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotrSH(Dh, Dl, 16), Dl: u64.rotrSL(Dh, Dl, 16) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 63)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrBH(Bh, Bl, 63), Bl: u64.rotrBL(Bh, Bl, 63) });\n    (BUF[2 * a] = Al), (BUF[2 * a + 1] = Ah);\n    (BUF[2 * b] = Bl), (BUF[2 * b + 1] = Bh);\n    (BUF[2 * c] = Cl), (BUF[2 * c + 1] = Ch);\n    (BUF[2 * d] = Dl), (BUF[2 * d + 1] = Dh);\n}\nclass BLAKE2b extends BLAKE2 {\n    constructor(opts = {}) {\n        super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);\n        // Same as SHA-512, but LE\n        this.v0l = IV[0] | 0;\n        this.v0h = IV[1] | 0;\n        this.v1l = IV[2] | 0;\n        this.v1h = IV[3] | 0;\n        this.v2l = IV[4] | 0;\n        this.v2h = IV[5] | 0;\n        this.v3l = IV[6] | 0;\n        this.v3h = IV[7] | 0;\n        this.v4l = IV[8] | 0;\n        this.v4h = IV[9] | 0;\n        this.v5l = IV[10] | 0;\n        this.v5h = IV[11] | 0;\n        this.v6l = IV[12] | 0;\n        this.v6h = IV[13] | 0;\n        this.v7l = IV[14] | 0;\n        this.v7h = IV[15] | 0;\n        const keyLength = opts.key ? opts.key.length : 0;\n        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (opts.salt) {\n            const salt = u32(toBytes(opts.salt));\n            this.v4l ^= salt[0];\n            this.v4h ^= salt[1];\n            this.v5l ^= salt[2];\n            this.v5h ^= salt[3];\n        }\n        if (opts.personalization) {\n            const pers = u32(toBytes(opts.personalization));\n            this.v6l ^= pers[0];\n            this.v6h ^= pers[1];\n            this.v7l ^= pers[2];\n            this.v7h ^= pers[3];\n        }\n        if (opts.key) {\n            // Pad to blockLen and update\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set(toBytes(opts.key));\n            this.update(tmp);\n        }\n    }\n    // prettier-ignore\n    get() {\n        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;\n        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\n    }\n    // prettier-ignore\n    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {\n        this.v0l = v0l | 0;\n        this.v0h = v0h | 0;\n        this.v1l = v1l | 0;\n        this.v1h = v1h | 0;\n        this.v2l = v2l | 0;\n        this.v2h = v2h | 0;\n        this.v3l = v3l | 0;\n        this.v3h = v3h | 0;\n        this.v4l = v4l | 0;\n        this.v4h = v4h | 0;\n        this.v5l = v5l | 0;\n        this.v5h = v5h | 0;\n        this.v6l = v6l | 0;\n        this.v6h = v6h | 0;\n        this.v7l = v7l | 0;\n        this.v7h = v7h | 0;\n    }\n    compress(msg, offset, isLast) {\n        this.get().forEach((v, i) => (BUF[i] = v)); // First half from state.\n        BUF.set(IV, 16); // Second half from IV.\n        let { h, l } = u64.fromBig(BigInt(this.length));\n        BUF[24] = IV[8] ^ l; // Low word of the offset.\n        BUF[25] = IV[9] ^ h; // High word.\n        // Invert all bits for last block\n        if (isLast) {\n            BUF[28] = ~BUF[28];\n            BUF[29] = ~BUF[29];\n        }\n        let j = 0;\n        const s = SIGMA;\n        for (let i = 0; i < 12; i++) {\n            G1(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G2(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G1(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G2(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G1(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G2(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G1(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G2(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G1(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G2(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G1(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G2(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G1(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G2(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G1(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n            G2(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n        }\n        this.v0l ^= BUF[0] ^ BUF[16];\n        this.v0h ^= BUF[1] ^ BUF[17];\n        this.v1l ^= BUF[2] ^ BUF[18];\n        this.v1h ^= BUF[3] ^ BUF[19];\n        this.v2l ^= BUF[4] ^ BUF[20];\n        this.v2h ^= BUF[5] ^ BUF[21];\n        this.v3l ^= BUF[6] ^ BUF[22];\n        this.v3h ^= BUF[7] ^ BUF[23];\n        this.v4l ^= BUF[8] ^ BUF[24];\n        this.v4h ^= BUF[9] ^ BUF[25];\n        this.v5l ^= BUF[10] ^ BUF[26];\n        this.v5h ^= BUF[11] ^ BUF[27];\n        this.v6l ^= BUF[12] ^ BUF[28];\n        this.v6h ^= BUF[13] ^ BUF[29];\n        this.v7l ^= BUF[14] ^ BUF[30];\n        this.v7h ^= BUF[15] ^ BUF[31];\n        BUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer32.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * BLAKE2b - optimized for 64-bit platforms. JS doesn't have uint64, so it's slower than BLAKE2s.\n * @param msg - message that would be hashed\n * @param opts - dkLen, key, salt, personalization\n */\nexport const blake2b = wrapConstructorWithOpts((opts) => new BLAKE2b(opts));\n","import checkPrivateRedeclaration from \"./checkPrivateRedeclaration.js\";\nexport default function _classPrivateFieldInitSpec(obj, privateMap, value) {\n  checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}","import classApplyDescriptorGet from \"./classApplyDescriptorGet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n\n  return descriptor.value;\n}","import classApplyDescriptorSet from \"./classApplyDescriptorSet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n\n    descriptor.value = value;\n  }\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { extractGlobal } from '@polkadot/x-global';\nimport { TextDecoder as Fallback } from \"./fallback.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nexport const TextDecoder = extractGlobal('TextDecoder', Fallback);","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { TextDecoder } from '@polkadot/x-textdecoder';\nconst decoder = new TextDecoder('utf-8');\n/**\n * @name u8aToString\n * @summary Creates a utf-8 string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToString } from '@polkadot/util';\n *\n * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello\n * ```\n */\n\nexport function u8aToString(value) {\n  return value ? decoder.decode(value) : '';\n}","// Copyright 2017-2022 @polkadot/x-textencoder authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// This is very limited, only handling Ascii values\nexport class TextDecoder {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor\n  constructor(_) {// nothing\n  }\n\n  decode(value) {\n    let result = '';\n\n    for (let i = 0; i < value.length; i++) {\n      result += String.fromCharCode(value[i]);\n    }\n\n    return result;\n  }\n\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","// Copyright 2019-2022 @polkadot/wasm-bridge authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { getRandomValues } from '@polkadot/x-randomvalues';\nconst DEFAULT_CRYPTO = {\n  getRandomValues\n};\nconst DEFAULT_SELF = {\n  crypto: DEFAULT_CRYPTO\n};\n/**\n * @name Wbg\n * @description\n * This defines the internal interfaces that wasm-bindgen used to communicate\n * with the host layer. None of these functions are available to the user, rather\n * they are called internally from the WASM code itself.\n *\n * The interfaces here are exposed in the imports on the created WASM interfaces.\n *\n * Internally the implementation does a thin layer into the supplied bridge.\n */\n\nexport class Wbg {\n  #bridge;\n\n  constructor(bridge) {\n    this.#bridge = bridge;\n  }\n  /** @internal */\n\n\n  abort = () => {\n    throw new Error('abort');\n  };\n  /** @internal */\n\n  __wbindgen_is_undefined = idx => {\n    return this.#bridge.getObject(idx) === undefined;\n  };\n  /** @internal */\n\n  __wbindgen_throw = (ptr, len) => {\n    throw new Error(this.#bridge.getString(ptr, len));\n  };\n  /** @internal */\n\n  __wbg_self_1b7a39e3a92c949c = () => {\n    return this.#bridge.addObject(DEFAULT_SELF);\n  };\n  /** @internal */\n\n  __wbg_require_604837428532a733 = (ptr, len) => {\n    throw new Error(`Unable to require ${this.#bridge.getString(ptr, len)}`);\n  };\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  __wbg_crypto_968f1772287e2df0 = _idx => {\n    return this.#bridge.addObject(DEFAULT_CRYPTO);\n  };\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  __wbg_getRandomValues_a3d34b4fee3c2869 = _idx => {\n    return this.#bridge.addObject(DEFAULT_CRYPTO.getRandomValues);\n  };\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  __wbg_getRandomValues_f5e14ab7ac8e995d = (_arg0, ptr, len) => {\n    DEFAULT_CRYPTO.getRandomValues(this.#bridge.getU8a(ptr, len));\n  };\n  /** @internal */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  __wbg_randomFillSync_d5bd2d655fdf256a = (_idx, _ptr, _len) => {\n    throw new Error('randomFillsync is not available'); // getObject(idx).randomFillSync(getU8a(ptr, len));\n  };\n  /** @internal */\n\n  __wbindgen_object_drop_ref = idx => {\n    this.#bridge.takeObject(idx);\n  };\n}","// Copyright 2017-2022 @polkadot/x-randomvalues authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { xglobal } from '@polkadot/x-global';\nexport { packageInfo } from \"./packageInfo.js\";\nexport function getRandomValues(arr) {\n  // We use x-global here - this prevents packagers such as rollup\n  // confusing this with the \"normal\" Node.js import and stubbing it\n  // (and also aligns with eg. x-fetch, where x-global is used)\n  return xglobal.crypto.getRandomValues(arr);\n}","// Copyright 2019-2022 @polkadot/wasm-util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// MIT License\n//\n// Copyright (c) 2020 Arjun Barrett\n//\n// Copied from https://github.com/101arrowz/fflate/blob/73c737941ec89d85cdf0ad39ee6f26c5fdc95fd7/src/index.ts\n// This only contains the unzlibSync function, no compression, no async, no workers\n//\n// These 2 issues are addressed as a short-term, stop-gap solution\n//   - https://github.com/polkadot-js/api/issues/2963\n//   - https://github.com/101arrowz/fflate/issues/17\n//\n// Only tweaks make here are some TS adjustments (we use strict null checks), the code is otherwise as-is with\n// only the single required function provided (compression is still being done in the build with fflate)\n\n/* eslint-disable */\n// inflate state\n// aliases for shorter compressed code (most minifers don't do this)\nconst u8 = Uint8Array,\n      u16 = Uint16Array,\n      u32 = Uint32Array; // code length index map\n\nconst clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]); // fixed length extra bits\n\nconst fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0,\n/* unused */\n0, 0,\n/* impossible */\n0]); // fixed distance extra bits\n// see fleb note\n\nconst fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13,\n/* unused */\n0, 0]); // get base, reverse index map from extra bits\n\nconst freb = (eb, start) => {\n  const b = new u16(31);\n\n  for (let i = 0; i < 31; ++i) {\n    b[i] = start += 1 << eb[i - 1];\n  } // numbers here are at max 18 bits\n\n\n  const r = new u32(b[30]);\n\n  for (let i = 1; i < 30; ++i) {\n    for (let j = b[i]; j < b[i + 1]; ++j) {\n      r[j] = j - b[i] << 5 | i;\n    }\n  }\n\n  return [b, r];\n};\n\nconst [fl, revfl] = freb(fleb, 2); // we can ignore the fact that the other numbers are wrong; they never happen anyway\n\nfl[28] = 258, revfl[258] = 28;\nconst [fd] = freb(fdeb, 0); // map of value to reverse (assuming 16 bits)\n\nconst rev = new u16(32768);\n\nfor (let i = 0; i < 32768; ++i) {\n  // reverse table algorithm from SO\n  let x = (i & 0xAAAA) >>> 1 | (i & 0x5555) << 1;\n  x = (x & 0xCCCC) >>> 2 | (x & 0x3333) << 2;\n  x = (x & 0xF0F0) >>> 4 | (x & 0x0F0F) << 4;\n  rev[i] = ((x & 0xFF00) >>> 8 | (x & 0x00FF) << 8) >>> 1;\n} // create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\n\n\nconst hMap = (cd, mb, r) => {\n  const s = cd.length; // index\n\n  let i = 0; // u16 \"map\": index -> # of codes with bit length = index\n\n  const l = new u16(mb); // length of cd must be 288 (total # of codes)\n\n  for (; i < s; ++i) ++l[cd[i] - 1]; // u16 \"map\": index -> minimum code for bit length = index\n\n\n  const le = new u16(mb);\n\n  for (i = 0; i < mb; ++i) {\n    le[i] = le[i - 1] + l[i - 1] << 1;\n  }\n\n  let co;\n\n  if (r) {\n    // u16 \"map\": index -> number of actual bits, symbol for code\n    co = new u16(1 << mb); // bits to remove for reverser\n\n    const rvb = 15 - mb;\n\n    for (i = 0; i < s; ++i) {\n      // ignore 0 lengths\n      if (cd[i]) {\n        // num encoding both symbol and bits read\n        const sv = i << 4 | cd[i]; // free bits\n\n        const r = mb - cd[i]; // start value\n\n        let v = le[cd[i] - 1]++ << r; // m is end value\n\n        for (const m = v | (1 << r) - 1; v <= m; ++v) {\n          // every 16 bit value starting with the code yields the same result\n          co[rev[v] >>> rvb] = sv;\n        }\n      }\n    }\n  } else {\n    co = new u16(s);\n\n    for (i = 0; i < s; ++i) co[i] = rev[le[cd[i] - 1]++] >>> 15 - cd[i];\n  }\n\n  return co;\n}; // fixed length tree\n\n\nconst flt = new u8(288);\n\nfor (let i = 0; i < 144; ++i) flt[i] = 8;\n\nfor (let i = 144; i < 256; ++i) flt[i] = 9;\n\nfor (let i = 256; i < 280; ++i) flt[i] = 7;\n\nfor (let i = 280; i < 288; ++i) flt[i] = 8; // fixed distance tree\n\n\nconst fdt = new u8(32);\n\nfor (let i = 0; i < 32; ++i) fdt[i] = 5; // fixed length map\n\n\nconst flrm = hMap(flt, 9, 1); // fixed distance map\n\nconst fdrm = hMap(fdt, 5, 1); // read d, starting at bit p and mask with m\n\nconst bits = (d, p, m) => {\n  const o = p >>> 3;\n  return (d[o] | d[o + 1] << 8) >>> (p & 7) & m;\n}; // read d, starting at bit p continuing for at least 16 bits\n\n\nconst bits16 = (d, p) => {\n  const o = p >>> 3;\n  return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >>> (p & 7);\n}; // get end of byte\n\n\nconst shft = p => (p >>> 3) + (p & 7 && 1); // typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\n\n\nconst slc = (v, s, e) => {\n  if (s == null || s < 0) s = 0;\n  if (e == null || e > v.length) e = v.length; // can't use .constructor in case user-supplied\n\n  const n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n  n.set(v.subarray(s, e));\n  return n;\n}; // find max of array\n\n\nconst max = a => {\n  let m = a[0];\n\n  for (let i = 1; i < a.length; ++i) {\n    if (a[i] > m) m = a[i];\n  }\n\n  return m;\n}; // expands raw DEFLATE data\n\n\nconst inflt = (dat, buf, st) => {\n  const noSt = !st || st.i;\n  if (!st) st = {}; // source length\n\n  const sl = dat.length; // have to estimate size\n\n  const noBuf = !buf || !noSt; // Assumes roughly 33% compression ratio average\n\n  if (!buf) buf = new u8(sl * 3); // ensure buffer can fit at least l elements\n\n  const cbuf = l => {\n    let bl = buf.length; // need to increase size to fit\n\n    if (l > bl) {\n      // Double or set to necessary, whichever is greater\n      const nbuf = new u8(Math.max(bl << 1, l));\n      nbuf.set(buf);\n      buf = nbuf;\n    }\n  }; //  last chunk         bitpos           bytes\n\n\n  let final = st.f || 0,\n      pos = st.p || 0,\n      bt = st.b || 0,\n      lm = st.l,\n      dm = st.d,\n      lbt = st.m,\n      dbt = st.n;\n  if (final && !lm) return buf; // total bits\n\n  const tbts = sl << 3;\n\n  do {\n    if (!lm) {\n      // BFINAL - this is only 1 when last chunk is next\n      st.f = final = bits(dat, pos, 1); // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n\n      const type = bits(dat, pos + 1, 3);\n      pos += 3;\n\n      if (!type) {\n        // go to end of byte boundary\n        const s = shft(pos) + 4,\n              l = dat[s - 4] | dat[s - 3] << 8,\n              t = s + l;\n\n        if (t > sl) {\n          if (noSt) throw 'unexpected EOF';\n          break;\n        } // ensure size\n\n\n        if (noBuf) cbuf(bt + l); // Copy over uncompressed data\n\n        buf.set(dat.subarray(s, t), bt); // Get new bitpos, update byte count\n\n        st.b = bt += l, st.p = pos = t << 3;\n        continue;\n      } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;else if (type == 2) {\n        //  literal                            lengths\n        const hLit = bits(dat, pos, 31) + 257,\n              hcLen = bits(dat, pos + 10, 15) + 4;\n        const tl = hLit + bits(dat, pos + 5, 31) + 1;\n        pos += 14; // length+distance tree\n\n        const ldt = new u8(tl); // code length tree\n\n        const clt = new u8(19);\n\n        for (let i = 0; i < hcLen; ++i) {\n          // use index map to get real code\n          clt[clim[i]] = bits(dat, pos + i * 3, 7);\n        }\n\n        pos += hcLen * 3; // code lengths bits\n\n        const clb = max(clt),\n              clbmsk = (1 << clb) - 1;\n        if (!noSt && pos + tl * (clb + 7) > tbts) break; // code lengths map\n\n        const clm = hMap(clt, clb, 1);\n\n        for (let i = 0; i < tl;) {\n          const r = clm[bits(dat, pos, clbmsk)]; // bits read\n\n          pos += r & 15; // symbol\n\n          const s = r >>> 4; // code length to copy\n\n          if (s < 16) {\n            ldt[i++] = s;\n          } else {\n            //  copy   count\n            let c = 0,\n                n = 0;\n            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n\n            while (n--) ldt[i++] = c;\n          }\n        } //    length tree                 distance tree\n\n\n        const lt = ldt.subarray(0, hLit),\n              dt = ldt.subarray(hLit); // max length bits\n\n        lbt = max(lt); // max dist bits\n\n        dbt = max(dt);\n        lm = hMap(lt, lbt, 1);\n        dm = hMap(dt, dbt, 1);\n      } else throw 'invalid block type';\n\n      if (pos > tbts) throw 'unexpected EOF';\n    } // Make sure the buffer can hold this + the largest possible addition\n    // maximum chunk size (practically, theoretically infinite) is 2^17;\n\n\n    if (noBuf) cbuf(bt + 131072);\n    const lms = (1 << lbt) - 1,\n          dms = (1 << dbt) - 1;\n    const mxa = lbt + dbt + 18;\n\n    while (noSt || pos + mxa < tbts) {\n      // bits read, code\n      const c = lm[bits16(dat, pos) & lms],\n            sym = c >>> 4;\n      pos += c & 15;\n      if (pos > tbts) throw 'unexpected EOF';\n      if (!c) throw 'invalid length/literal';\n      if (sym < 256) buf[bt++] = sym;else if (sym == 256) {\n        lm = undefined;\n        break;\n      } else {\n        let add = sym - 254; // no extra bits needed if less\n\n        if (sym > 264) {\n          // index\n          const i = sym - 257,\n                b = fleb[i];\n          add = bits(dat, pos, (1 << b) - 1) + fl[i];\n          pos += b;\n        } // dist\n\n\n        const d = dm[bits16(dat, pos) & dms],\n              dsym = d >>> 4;\n        if (!d) throw 'invalid distance';\n        pos += d & 15;\n        let dt = fd[dsym];\n\n        if (dsym > 3) {\n          const b = fdeb[dsym];\n          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n        }\n\n        if (pos > tbts) throw 'unexpected EOF';\n        if (noBuf) cbuf(bt + 131072);\n        const end = bt + add;\n\n        for (; bt < end; bt += 4) {\n          buf[bt] = buf[bt - dt];\n          buf[bt + 1] = buf[bt + 1 - dt];\n          buf[bt + 2] = buf[bt + 2 - dt];\n          buf[bt + 3] = buf[bt + 3 - dt];\n        }\n\n        bt = end;\n      }\n    }\n\n    st.l = lm, st.p = pos, st.b = bt;\n    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n  } while (!final);\n\n  return bt == buf.length ? buf : slc(buf, 0, bt);\n}; // zlib valid\n\n\nconst zlv = d => {\n  if ((d[0] & 15) != 8 || d[0] >>> 4 > 7 || (d[0] << 8 | d[1]) % 31) throw 'invalid zlib data';\n  if (d[1] & 32) throw 'invalid zlib data: preset dictionaries not supported';\n};\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\n\n\nexport function unzlibSync(data, out) {\n  return inflt((zlv(data), data.subarray(2, -4)), out);\n}","// Copyright 2019-2022 @polkadot/wasm-util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Use an array for our indexer - this is faster than using map access. In\n// this case we assume ASCII-only inputs, so we cannot overflow the array\nconst chr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst map = new Array(256); // We use charCodeAt for access here and in the decoder loop - this is faster\n// on lookups (array + numbers) and also faster than accessing the specific\n// character via data[i]\n\nfor (let i = 0; i < chr.length; i++) {\n  map[chr.charCodeAt(i)] = i;\n}\n/**\n * @name base64Decode\n * @description\n * A base64Decoding function that operates in all environments. Unlike decoding\n * from Buffer (Node.js only) or atob (browser-only) this implementation is\n * slightly slower, but it is platform independent.\n *\n * For our usage, since we have access to the static final size (where used), we\n * decode to a specified output buffer. This also means we have applied a number\n * of optimizations based on this - checking output position instead of chars.\n */\n\n\nexport function base64Decode(data, out) {\n  const len = out.length;\n  let byte = 0;\n  let bits = 0;\n  let pos = -1;\n\n  for (let i = 0; pos < len; i++) {\n    // each character represents 6 bits\n    byte = byte << 6 | map[data.charCodeAt(i)]; // each byte needs to contain 8 bits\n\n    if ((bits += 6) >= 8) {\n      out[++pos] = byte >>> (bits -= 8) & 0xff;\n    }\n  }\n\n  return out;\n}","// Copyright 2019-2022 @polkadot/wasm-crypto-wasm authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { base64Decode, unzlibSync } from '@polkadot/wasm-util';\nimport { bytes, lenIn, lenOut } from \"./cjs/bytes.js\";\nexport { packageInfo } from \"./packageInfo.js\";\n/**\n * @name wasmBytes\n * @description\n * The decoded WASM interface as exposed by this package.\n *\n * The build process will output into cjs/* into a compressed base64 format.\n * Upon loading the exposed bytes will be decoded and decompressed form this\n * specific format and returned.\n */\n\nexport const wasmBytes = unzlibSync(base64Decode(bytes, new Uint8Array(lenIn)), new Uint8Array(lenOut));","// Copyright 2019-2022 @polkadot/wasm-crypto-init authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { createWasmFn } from '@polkadot/wasm-bridge';\nimport { wasmBytes } from '@polkadot/wasm-crypto-wasm';\nexport { packageInfo } from \"./packageInfo.js\";\n/**\n * @name createWasm\n * @description\n * Creates an interface using only WASM\n */\n\nexport const createWasm = createWasmFn('crypto', wasmBytes, null);","// Copyright 2019-2022 @polkadot/wasm-bundle authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name createWasmFn\n * @description\n * Create a WASM (or ASM.js) creator interface based on the supplied information.\n *\n * It will attempt to create a WASM interface first and if this fails or is not available in\n * the environment, will fallback to attempting to create an ASM.js interface.\n */\nexport function createWasmFn(root, wasmBytes, asmFn) {\n  return async wbg => {\n    const result = {\n      error: null,\n      type: 'none',\n      wasm: null\n    };\n\n    try {\n      if (!wasmBytes || !wasmBytes.length) {\n        throw new Error('No WebAssembly provided for initialization');\n      } else if (typeof WebAssembly !== 'object' || typeof WebAssembly.instantiate !== 'function') {\n        throw new Error('WebAssembly is not available in your environment');\n      }\n\n      const source = await WebAssembly.instantiate(wasmBytes, {\n        wbg\n      });\n      result.wasm = source.instance.exports;\n      result.type = 'wasm';\n    } catch (error) {\n      // if we have a valid supplied asm.js, return that\n      if (typeof asmFn === 'function') {\n        result.wasm = asmFn(wbg);\n        result.type = 'asm';\n      } else {\n        result.error = `FATAL: Unable to initialize @polkadot/wasm-${root}:: ${error.message}`;\n        console.error(result.error);\n      }\n    }\n\n    return result;\n  };\n}","// Copyright 2019-2022 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { Bridge } from '@polkadot/wasm-bridge';\nimport { createWasm } from '@polkadot/wasm-crypto-init';\n/**\n * @name bridge\n * @description\n * The JS <-> WASM bridge that is in operation. For the specific package\n * it is a global, i.e. all operations happens on this specific bridge\n */\n\nexport const bridge = new Bridge(createWasm);\n/**\n * @name initBridge\n * @description\n * Creates a new bridge interface with the (optional) initialization function\n */\n\nexport async function initBridge(createWasm) {\n  return bridge.init(createWasm);\n}","// Copyright 2019-2022 @polkadot/wasm-bridge authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// A number of functions are \"unsafe\" and purposefully so - it is\n// assumed that where the bridge is used, it is correctly wrapped\n// in a safeguard (see withWasm in the wasm-crypto package) which\n// then ensures that the internal wasm instance here is available\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { stringToU8a, u8aToString } from '@polkadot/util';\nimport { Wbg } from \"./wbg.js\";\n/**\n * @name Bridge\n * @description\n * Creates a bridge between the JS and WASM environments.\n *\n * For any bridge it is passed an function white is then called internally at the\n * time of initialization. This affectively implements the layer between WASM and\n * the native environment, providing all the plumbing needed for the Wbg classes.\n */\n\nexport class Bridge {\n  #cachegetInt32;\n  #cachegetUint8;\n  #createWasm;\n  #heap;\n  #heapNext;\n  #wasm;\n  #wasmError;\n  #wasmPromise;\n  #wbg;\n  #type;\n\n  constructor(createWasm) {\n    this.#createWasm = createWasm;\n    this.#cachegetInt32 = null;\n    this.#cachegetUint8 = null;\n    this.#heap = new Array(32).fill(undefined).concat(undefined, null, true, false);\n    this.#heapNext = this.#heap.length;\n    this.#type = 'none';\n    this.#wasm = null;\n    this.#wasmError = null;\n    this.#wasmPromise = null;\n    this.#wbg = { ...new Wbg(this)\n    };\n  }\n  /** @description Returns the init error */\n\n\n  get error() {\n    return this.#wasmError;\n  }\n  /** @description Returns the init type */\n\n\n  get type() {\n    return this.#type;\n  }\n  /** @description Returns the created wasm interface */\n\n\n  get wasm() {\n    return this.#wasm;\n  }\n  /** @description Performs the wasm initialization */\n\n\n  async init(createWasm) {\n    if (!this.#wasmPromise || createWasm) {\n      this.#wasmPromise = (createWasm || this.#createWasm)(this.#wbg);\n    }\n\n    const {\n      error,\n      type,\n      wasm\n    } = await this.#wasmPromise;\n    this.#type = type;\n    this.#wasm = wasm;\n    this.#wasmError = error;\n    return this.#wasm;\n  }\n  /**\n   * @internal\n   * @description Gets an object from the heap\n   */\n\n\n  getObject(idx) {\n    return this.#heap[idx];\n  }\n  /**\n   * @internal\n   * @description Removes an object from the heap\n   */\n\n\n  dropObject(idx) {\n    if (idx < 36) {\n      return;\n    }\n\n    this.#heap[idx] = this.#heapNext;\n    this.#heapNext = idx;\n  }\n  /**\n   * @internal\n   * @description Retrieves and removes an object to the heap\n   */\n\n\n  takeObject(idx) {\n    const ret = this.getObject(idx);\n    this.dropObject(idx);\n    return ret;\n  }\n  /**\n   * @internal\n   * @description Adds an object to the heap\n   */\n\n\n  addObject(obj) {\n    if (this.#heapNext === this.#heap.length) {\n      this.#heap.push(this.#heap.length + 1);\n    }\n\n    const idx = this.#heapNext;\n    this.#heapNext = this.#heap[idx];\n    this.#heap[idx] = obj;\n    return idx;\n  }\n  /**\n   * @internal\n   * @description Retrieve an Int32 in the WASM interface\n   */\n\n\n  getInt32() {\n    if (this.#cachegetInt32 === null || this.#cachegetInt32.buffer !== this.#wasm.memory.buffer) {\n      this.#cachegetInt32 = new Int32Array(this.#wasm.memory.buffer);\n    }\n\n    return this.#cachegetInt32;\n  }\n  /**\n   * @internal\n   * @description Retrieve an Uint8Array in the WASM interface\n   */\n\n\n  getUint8() {\n    if (this.#cachegetUint8 === null || this.#cachegetUint8.buffer !== this.#wasm.memory.buffer) {\n      this.#cachegetUint8 = new Uint8Array(this.#wasm.memory.buffer);\n    }\n\n    return this.#cachegetUint8;\n  }\n  /**\n   * @internal\n   * @description Retrieves an Uint8Array in the WASM interface\n   */\n\n\n  getU8a(ptr, len) {\n    return this.getUint8().subarray(ptr / 1, ptr / 1 + len);\n  }\n  /**\n   * @internal\n   * @description Retrieves a string in the WASM interface\n   */\n\n\n  getString(ptr, len) {\n    return u8aToString(this.getU8a(ptr, len));\n  }\n  /**\n   * @internal\n   * @description Allocates an Uint8Array in the WASM interface\n   */\n\n\n  allocU8a(arg) {\n    const ptr = this.#wasm.__wbindgen_malloc(arg.length * 1);\n\n    this.getUint8().set(arg, ptr / 1);\n    return [ptr, arg.length];\n  }\n  /**\n   * @internal\n   * @description Allocates a string in the WASM interface\n   */\n\n\n  allocString(arg) {\n    return this.allocU8a(stringToU8a(arg));\n  }\n  /**\n   * @internal\n   * @description Retrieves an Uint8Array from the WASM interface\n   */\n\n\n  resultU8a() {\n    const r0 = this.getInt32()[8 / 4 + 0];\n    const r1 = this.getInt32()[8 / 4 + 1];\n    const ret = this.getU8a(r0, r1).slice();\n\n    this.#wasm.__wbindgen_free(r0, r1 * 1);\n\n    return ret;\n  }\n  /**\n   * @internal\n   * @description Retrieve a string from the WASM interface\n   */\n\n\n  resultString() {\n    return u8aToString(this.resultU8a());\n  }\n\n}","// Copyright 2019-2022 @polkadot/wasm-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { bridge, initBridge } from \"./init.js\";\nexport { packageInfo } from \"./packageInfo.js\";\nexport { bridge }; // Removes the first parameter (expected as WasmCryptoInstance) and leaves the\n// rest of the parameters in-tack. This allows us to dynamically create a function\n// return from the withWasm helper\n\n/**\n * @internal\n * @description\n * This create an extenal interface function from the signature, all the while checking\n * the actual bridge wasm interface to ensure it has been initialized.\n *\n * This means that we can call it\n *\n *   withWasm(wasm: WasmCryptoInstance, a: number, b: string) => Uint8Array\n *\n * and in this case it will create an interface function with the signarure\n *\n *   (a: number, b: string) => Uint8Array\n */\nfunction withWasm(fn) {\n  return (...params) => {\n    if (!bridge.wasm) {\n      throw new Error('The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');\n    }\n\n    return fn(bridge.wasm, ...params);\n  };\n}\n\nexport const bip39Generate = withWasm((wasm, words) => {\n  wasm.ext_bip39_generate(8, words);\n  return bridge.resultString();\n});\nexport const bip39ToEntropy = withWasm((wasm, phrase) => {\n  wasm.ext_bip39_to_entropy(8, ...bridge.allocString(phrase));\n  return bridge.resultU8a();\n});\nexport const bip39ToMiniSecret = withWasm((wasm, phrase, password) => {\n  wasm.ext_bip39_to_mini_secret(8, ...bridge.allocString(phrase), ...bridge.allocString(password));\n  return bridge.resultU8a();\n});\nexport const bip39ToSeed = withWasm((wasm, phrase, password) => {\n  wasm.ext_bip39_to_seed(8, ...bridge.allocString(phrase), ...bridge.allocString(password));\n  return bridge.resultU8a();\n});\nexport const bip39Validate = withWasm((wasm, phrase) => {\n  const ret = wasm.ext_bip39_validate(...bridge.allocString(phrase));\n  return ret !== 0;\n});\nexport const ed25519KeypairFromSeed = withWasm((wasm, seed) => {\n  wasm.ext_ed_from_seed(8, ...bridge.allocU8a(seed));\n  return bridge.resultU8a();\n});\nexport const ed25519Sign = withWasm((wasm, pubkey, seckey, message) => {\n  wasm.ext_ed_sign(8, ...bridge.allocU8a(pubkey), ...bridge.allocU8a(seckey), ...bridge.allocU8a(message));\n  return bridge.resultU8a();\n});\nexport const ed25519Verify = withWasm((wasm, signature, message, pubkey) => {\n  const ret = wasm.ext_ed_verify(...bridge.allocU8a(signature), ...bridge.allocU8a(message), ...bridge.allocU8a(pubkey));\n  return ret !== 0;\n});\nexport const secp256k1FromSeed = withWasm((wasm, seckey) => {\n  wasm.ext_secp_from_seed(8, ...bridge.allocU8a(seckey));\n  return bridge.resultU8a();\n});\nexport const secp256k1Compress = withWasm((wasm, pubkey) => {\n  wasm.ext_secp_pub_compress(8, ...bridge.allocU8a(pubkey));\n  return bridge.resultU8a();\n});\nexport const secp256k1Expand = withWasm((wasm, pubkey) => {\n  wasm.ext_secp_pub_expand(8, ...bridge.allocU8a(pubkey));\n  return bridge.resultU8a();\n});\nexport const secp256k1Recover = withWasm((wasm, msgHash, sig, recovery) => {\n  wasm.ext_secp_recover(8, ...bridge.allocU8a(msgHash), ...bridge.allocU8a(sig), recovery);\n  return bridge.resultU8a();\n});\nexport const secp256k1Sign = withWasm((wasm, msgHash, seckey) => {\n  wasm.ext_secp_sign(8, ...bridge.allocU8a(msgHash), ...bridge.allocU8a(seckey));\n  return bridge.resultU8a();\n});\nexport const sr25519DeriveKeypairHard = withWasm((wasm, pair, cc) => {\n  wasm.ext_sr_derive_keypair_hard(8, ...bridge.allocU8a(pair), ...bridge.allocU8a(cc));\n  return bridge.resultU8a();\n});\nexport const sr25519DeriveKeypairSoft = withWasm((wasm, pair, cc) => {\n  wasm.ext_sr_derive_keypair_soft(8, ...bridge.allocU8a(pair), ...bridge.allocU8a(cc));\n  return bridge.resultU8a();\n});\nexport const sr25519DerivePublicSoft = withWasm((wasm, pubkey, cc) => {\n  wasm.ext_sr_derive_public_soft(8, ...bridge.allocU8a(pubkey), ...bridge.allocU8a(cc));\n  return bridge.resultU8a();\n});\nexport const sr25519KeypairFromSeed = withWasm((wasm, seed) => {\n  wasm.ext_sr_from_seed(8, ...bridge.allocU8a(seed));\n  return bridge.resultU8a();\n});\nexport const sr25519Sign = withWasm((wasm, pubkey, secret, message) => {\n  wasm.ext_sr_sign(8, ...bridge.allocU8a(pubkey), ...bridge.allocU8a(secret), ...bridge.allocU8a(message));\n  return bridge.resultU8a();\n});\nexport const sr25519Verify = withWasm((wasm, signature, message, pubkey) => {\n  const ret = wasm.ext_sr_verify(...bridge.allocU8a(signature), ...bridge.allocU8a(message), ...bridge.allocU8a(pubkey));\n  return ret !== 0;\n});\nexport const sr25519Agree = withWasm((wasm, pubkey, secret) => {\n  wasm.ext_sr_agree(8, ...bridge.allocU8a(pubkey), ...bridge.allocU8a(secret));\n  return bridge.resultU8a();\n});\nexport const vrfSign = withWasm((wasm, secret, context, message, extra) => {\n  wasm.ext_vrf_sign(8, ...bridge.allocU8a(secret), ...bridge.allocU8a(context), ...bridge.allocU8a(message), ...bridge.allocU8a(extra));\n  return bridge.resultU8a();\n});\nexport const vrfVerify = withWasm((wasm, pubkey, context, message, extra, outAndProof) => {\n  const ret = wasm.ext_vrf_verify(...bridge.allocU8a(pubkey), ...bridge.allocU8a(context), ...bridge.allocU8a(message), ...bridge.allocU8a(extra), ...bridge.allocU8a(outAndProof));\n  return ret !== 0;\n});\nexport const blake2b = withWasm((wasm, data, key, size) => {\n  wasm.ext_blake2b(8, ...bridge.allocU8a(data), ...bridge.allocU8a(key), size);\n  return bridge.resultU8a();\n});\nexport const hmacSha256 = withWasm((wasm, key, data) => {\n  wasm.ext_hmac_sha256(8, ...bridge.allocU8a(key), ...bridge.allocU8a(data));\n  return bridge.resultU8a();\n});\nexport const hmacSha512 = withWasm((wasm, key, data) => {\n  wasm.ext_hmac_sha512(8, ...bridge.allocU8a(key), ...bridge.allocU8a(data));\n  return bridge.resultU8a();\n});\nexport const keccak256 = withWasm((wasm, data) => {\n  wasm.ext_keccak256(8, ...bridge.allocU8a(data));\n  return bridge.resultU8a();\n});\nexport const keccak512 = withWasm((wasm, data) => {\n  wasm.ext_keccak512(8, ...bridge.allocU8a(data));\n  return bridge.resultU8a();\n});\nexport const pbkdf2 = withWasm((wasm, data, salt, rounds) => {\n  wasm.ext_pbkdf2(8, ...bridge.allocU8a(data), ...bridge.allocU8a(salt), rounds);\n  return bridge.resultU8a();\n});\nexport const scrypt = withWasm((wasm, password, salt, log2n, r, p) => {\n  wasm.ext_scrypt(8, ...bridge.allocU8a(password), ...bridge.allocU8a(salt), log2n, r, p);\n  return bridge.resultU8a();\n});\nexport const sha256 = withWasm((wasm, data) => {\n  wasm.ext_sha256(8, ...bridge.allocU8a(data));\n  return bridge.resultU8a();\n});\nexport const sha512 = withWasm((wasm, data) => {\n  wasm.ext_sha512(8, ...bridge.allocU8a(data));\n  return bridge.resultU8a();\n});\nexport const twox = withWasm((wasm, data, rounds) => {\n  wasm.ext_twox(8, ...bridge.allocU8a(data), rounds);\n  return bridge.resultU8a();\n});\nexport function isReady() {\n  return !!bridge.wasm;\n}\nexport async function waitReady() {\n  try {\n    const wasm = await initBridge();\n    return !!wasm;\n  } catch {\n    return false;\n  }\n}","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst U8 = new Array(256);\nconst U16 = new Array(256 * 256);\n\nfor (let n = 0; n < 256; n++) {\n  U8[n] = n.toString(16).padStart(2, '0');\n}\n\nfor (let i = 0; i < 256; i++) {\n  const s = i << 8;\n\n  for (let j = 0; j < 256; j++) {\n    U16[s | j] = U8[i] + U8[j];\n  }\n}\n/** @internal */\n\n\nfunction hex(value, result) {\n  const mod = value.length % 2 | 0;\n  const length = value.length - mod | 0;\n\n  for (let i = 0; i < length; i += 2) {\n    result += U16[value[i] << 8 | value[i + 1]];\n  }\n\n  if (mod) {\n    result += U8[value[length] | 0];\n  }\n\n  return result;\n}\n/**\n * @name u8aToHex\n * @summary Creates a hex string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual hex string. `null` or `undefined` values returns an `0x` string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToHex } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\n\n\nexport function u8aToHex(value, bitLength = -1, isPrefixed = true) {\n  // this is not 100% correct sinmce we support isPrefixed = false....\n  const empty = isPrefixed ? '0x' : '';\n\n  if (!value || !value.length) {\n    return empty;\n  } else if (bitLength > 0) {\n    const length = Math.ceil(bitLength / 8);\n\n    if (value.length > length) {\n      return `${hex(value.subarray(0, length / 2), empty)}…${hex(value.subarray(value.length - length / 2), '')}`;\n    }\n  }\n\n  return hex(value, empty);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { blake2b as blake2bJs } from '@noble/hashes/blake2b';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { blake2b, isReady } from '@polkadot/wasm-crypto';\nimport { createAsHex } from \"../helpers.js\";\n/**\n * @name blake2AsU8a\n * @summary Creates a blake2b u8a from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsU8a } from '@polkadot/util-crypto';\n *\n * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]\n * ```\n */\n\nexport function blake2AsU8a(data, bitLength = 256, key, onlyJs) {\n  const byteLength = Math.ceil(bitLength / 8);\n  const u8a = u8aToU8a(data);\n  return !hasBigInt || !onlyJs && isReady() ? blake2b(u8a, u8aToU8a(key), byteLength) : blake2bJs(u8a, {\n    dkLen: byteLength,\n    key: key || undefined\n  });\n}\n/**\n * @name blake2AsHex\n * @description Creates a blake2b hex from the input.\n */\n\nexport const blake2AsHex = createAsHex(blake2AsU8a);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from \"../blake2/asU8a.js\";\nconst SS58_PREFIX = stringToU8a('SS58PRE');\nexport function sshash(key) {\n  return blake2AsU8a(u8aConcat(SS58_PREFIX, key), 512);\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { sshash } from \"./sshash.js\";\nexport function checkAddressChecksum(decoded) {\n  const ss58Length = decoded[0] & 0b01000000 ? 2 : 1;\n  const ss58Decoded = ss58Length === 1 ? decoded[0] : (decoded[0] & 0b00111111) << 2 | decoded[1] >> 6 | (decoded[1] & 0b00111111) << 8; // 32/33 bytes public + 2 bytes checksum + prefix\n\n  const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);\n  const length = decoded.length - (isPublicKey ? 2 : 1); // calculate the hash and do the checksum byte checks\n\n  const hash = sshash(decoded.subarray(0, length));\n  const isValid = (decoded[0] & 0b10000000) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1] : decoded[decoded.length - 1] === hash[0]);\n  return [isValid, length, ss58Length, ss58Decoded];\n}","// Copyright (C) 2021-2022 Parity Technologies (UK) Ltd.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// \thttp://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport default [\n\t{\n\t\t\"prefix\": 0,\n\t\t\"network\": \"polkadot\",\n\t\t\"displayName\": \"Polkadot Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"DOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadot.network\"\n\t},\n\t{\n\t\t\"prefix\": 1,\n\t\t\"network\": \"BareSr25519\",\n\t\t\"displayName\": \"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 2,\n\t\t\"network\": \"kusama\",\n\t\t\"displayName\": \"Kusama Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"KSM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kusama.network\"\n\t},\n\t{\n\t\t\"prefix\": 3,\n\t\t\"network\": \"BareEd25519\",\n\t\t\"displayName\": \"Bare 32-bit Ed25519 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Ed25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 4,\n\t\t\"network\": \"katalchain\",\n\t\t\"displayName\": \"Katal Chain\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 5,\n\t\t\"network\": \"astar\",\n\t\t\"displayName\": \"Astar Network\",\n\t\t\"symbols\": [\n\t\t\t\"ASTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://astar.network\"\n\t},\n\t{\n\t\t\"prefix\": 6,\n\t\t\"network\": \"bifrost\",\n\t\t\"displayName\": \"Bifrost\",\n\t\t\"symbols\": [\n\t\t\t\"BNC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bifrost.finance/\"\n\t},\n\t{\n\t\t\"prefix\": 7,\n\t\t\"network\": \"edgeware\",\n\t\t\"displayName\": \"Edgeware\",\n\t\t\"symbols\": [\n\t\t\t\"EDG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://edgewa.re\"\n\t},\n\t{\n\t\t\"prefix\": 8,\n\t\t\"network\": \"karura\",\n\t\t\"displayName\": \"Karura\",\n\t\t\"symbols\": [\n\t\t\t\"KAR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://karura.network/\"\n\t},\n\t{\n\t\t\"prefix\": 9,\n\t\t\"network\": \"reynolds\",\n\t\t\"displayName\": \"Laminar Reynolds Canary\",\n\t\t\"symbols\": [\n\t\t\t\"REY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 10,\n\t\t\"network\": \"acala\",\n\t\t\"displayName\": \"Acala\",\n\t\t\"symbols\": [\n\t\t\t\"ACA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://acala.network/\"\n\t},\n\t{\n\t\t\"prefix\": 11,\n\t\t\"network\": \"laminar\",\n\t\t\"displayName\": \"Laminar\",\n\t\t\"symbols\": [\n\t\t\t\"LAMI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 12,\n\t\t\"network\": \"polymesh\",\n\t\t\"displayName\": \"Polymesh\",\n\t\t\"symbols\": [\n\t\t\t\"POLYX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polymath.network/\"\n\t},\n\t{\n\t\t\"prefix\": 13,\n\t\t\"network\": \"integritee\",\n\t\t\"displayName\": \"Integritee\",\n\t\t\"symbols\": [\n\t\t\t\"TEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 14,\n\t\t\"network\": \"totem\",\n\t\t\"displayName\": \"Totem\",\n\t\t\"symbols\": [\n\t\t\t\"TOTEM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t0\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 15,\n\t\t\"network\": \"synesthesia\",\n\t\t\"displayName\": \"Synesthesia\",\n\t\t\"symbols\": [\n\t\t\t\"SYN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://synesthesia.network/\"\n\t},\n\t{\n\t\t\"prefix\": 16,\n\t\t\"network\": \"kulupu\",\n\t\t\"displayName\": \"Kulupu\",\n\t\t\"symbols\": [\n\t\t\t\"KLP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kulupu.network/\"\n\t},\n\t{\n\t\t\"prefix\": 17,\n\t\t\"network\": \"dark\",\n\t\t\"displayName\": \"Dark Mainnet\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 18,\n\t\t\"network\": \"darwinia\",\n\t\t\"displayName\": \"Darwinia Network\",\n\t\t\"symbols\": [\n\t\t\t\"RING\",\n\t\t\t\"KTON\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9,\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://darwinia.network/\"\n\t},\n\t{\n\t\t\"prefix\": 19,\n\t\t\"network\": \"watr\",\n\t\t\"displayName\": \"Watr Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"WATR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.watr.org\"\n\t},\n\t{\n\t\t\"prefix\": 20,\n\t\t\"network\": \"stafi\",\n\t\t\"displayName\": \"Stafi\",\n\t\t\"symbols\": [\n\t\t\t\"FIS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://stafi.io\"\n\t},\n\t{\n\t\t\"prefix\": 22,\n\t\t\"network\": \"dock-pos-mainnet\",\n\t\t\"displayName\": \"Dock Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"DCK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dock.io\"\n\t},\n\t{\n\t\t\"prefix\": 23,\n\t\t\"network\": \"shift\",\n\t\t\"displayName\": \"ShiftNrg\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 24,\n\t\t\"network\": \"zero\",\n\t\t\"displayName\": \"ZERO\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 25,\n\t\t\"network\": \"zero-alphaville\",\n\t\t\"displayName\": \"ZERO Alphaville\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 26,\n\t\t\"network\": \"jupiter\",\n\t\t\"displayName\": \"Jupiter\",\n\t\t\"symbols\": [\n\t\t\t\"jDOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://jupiter.patract.io\"\n\t},\n\t{\n\t\t\"prefix\": 27,\n\t\t\"network\": \"kabocha\",\n\t\t\"displayName\": \"Kabocha\",\n\t\t\"symbols\": [\n\t\t\t\"KAB\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kabocha.network\"\n\t},\n\t{\n\t\t\"prefix\": 28,\n\t\t\"network\": \"subsocial\",\n\t\t\"displayName\": \"Subsocial\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 29,\n\t\t\"network\": \"cord\",\n\t\t\"displayName\": \"CORD Network\",\n\t\t\"symbols\": [\n\t\t\t\"DHI\",\n\t\t\t\"WAY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cord.network/\"\n\t},\n\t{\n\t\t\"prefix\": 30,\n\t\t\"network\": \"phala\",\n\t\t\"displayName\": \"Phala Network\",\n\t\t\"symbols\": [\n\t\t\t\"PHA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://phala.network\"\n\t},\n\t{\n\t\t\"prefix\": 31,\n\t\t\"network\": \"litentry\",\n\t\t\"displayName\": \"Litentry Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 32,\n\t\t\"network\": \"robonomics\",\n\t\t\"displayName\": \"Robonomics\",\n\t\t\"symbols\": [\n\t\t\t\"XRT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://robonomics.network\"\n\t},\n\t{\n\t\t\"prefix\": 33,\n\t\t\"network\": \"datahighway\",\n\t\t\"displayName\": \"DataHighway\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 34,\n\t\t\"network\": \"ares\",\n\t\t\"displayName\": \"Ares Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"ARES\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.aresprotocol.com/\"\n\t},\n\t{\n\t\t\"prefix\": 35,\n\t\t\"network\": \"vln\",\n\t\t\"displayName\": \"Valiu Liquidity Network\",\n\t\t\"symbols\": [\n\t\t\t\"USDv\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://valiu.com/\"\n\t},\n\t{\n\t\t\"prefix\": 36,\n\t\t\"network\": \"centrifuge\",\n\t\t\"displayName\": \"Centrifuge Chain\",\n\t\t\"symbols\": [\n\t\t\t\"CFG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 37,\n\t\t\"network\": \"nodle\",\n\t\t\"displayName\": \"Nodle Chain\",\n\t\t\"symbols\": [\n\t\t\t\"NODL\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t11\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://nodle.io/\"\n\t},\n\t{\n\t\t\"prefix\": 38,\n\t\t\"network\": \"kilt\",\n\t\t\"displayName\": \"KILT Spiritnet\",\n\t\t\"symbols\": [\n\t\t\t\"KILT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kilt.io/\"\n\t},\n\t{\n\t\t\"prefix\": 39,\n\t\t\"network\": \"mathchain\",\n\t\t\"displayName\": \"MathChain mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 40,\n\t\t\"network\": \"mathchain-testnet\",\n\t\t\"displayName\": \"MathChain testnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 41,\n\t\t\"network\": \"poli\",\n\t\t\"displayName\": \"Polimec Chain\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polimec.io/\"\n\t},\n\t{\n\t\t\"prefix\": 42,\n\t\t\"network\": \"substrate\",\n\t\t\"displayName\": \"Substrate\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://substrate.io/\"\n\t},\n\t{\n\t\t\"prefix\": 43,\n\t\t\"network\": \"BareSecp256k1\",\n\t\t\"displayName\": \"Bare 32-bit ECDSA SECP-256k1 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 44,\n\t\t\"network\": \"chainx\",\n\t\t\"displayName\": \"ChainX\",\n\t\t\"symbols\": [\n\t\t\t\"PCX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t8\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://chainx.org/\"\n\t},\n\t{\n\t\t\"prefix\": 45,\n\t\t\"network\": \"uniarts\",\n\t\t\"displayName\": \"UniArts Network\",\n\t\t\"symbols\": [\n\t\t\t\"UART\",\n\t\t\t\"UINK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://uniarts.me\"\n\t},\n\t{\n\t\t\"prefix\": 46,\n\t\t\"network\": \"reserved46\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 47,\n\t\t\"network\": \"reserved47\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 48,\n\t\t\"network\": \"neatcoin\",\n\t\t\"displayName\": \"Neatcoin Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"NEAT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://neatcoin.org\"\n\t},\n\t{\n\t\t\"prefix\": 49,\n\t\t\"network\": \"picasso\",\n\t\t\"displayName\": \"Picasso\",\n\t\t\"symbols\": [\n\t\t\t\"PICA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://picasso.composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 50,\n\t\t\"network\": \"composable\",\n\t\t\"displayName\": \"Composable\",\n\t\t\"symbols\": [\n\t\t\t\"LAYR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 51,\n\t\t\"network\": \"oak\",\n\t\t\"displayName\": \"OAK Network\",\n\t\t\"symbols\": [\n\t\t\t\"OAK\",\n\t\t\t\"TUR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10,\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://oak.tech\"\n\t},\n\t{\n\t\t\"prefix\": 52,\n\t\t\"network\": \"KICO\",\n\t\t\"displayName\": \"KICO\",\n\t\t\"symbols\": [\n\t\t\t\"KICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 53,\n\t\t\"network\": \"DICO\",\n\t\t\"displayName\": \"DICO\",\n\t\t\"symbols\": [\n\t\t\t\"DICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 54,\n\t\t\"network\": \"cere\",\n\t\t\"displayName\": \"Cere Network\",\n\t\t\"symbols\": [\n\t\t\t\"CERE\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cere.network\"\n\t},\n\t{\n\t\t\"prefix\": 55,\n\t\t\"network\": \"xxnetwork\",\n\t\t\"displayName\": \"xx network\",\n\t\t\"symbols\": [\n\t\t\t\"XX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://xx.network\"\n\t},\n\t{\n\t\t\"prefix\": 56,\n\t\t\"network\": \"pendulum\",\n\t\t\"displayName\": \"Pendulum chain\",\n\t\t\"symbols\": [\n\t\t\t\"PEN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pendulumchain.org/\"\n\t},\n\t{\n\t\t\"prefix\": 57,\n\t\t\"network\": \"amplitude\",\n\t\t\"displayName\": \"Amplitude chain\",\n\t\t\"symbols\": [\n\t\t\t\"AMPE\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pendulumchain.org/\"\n\t},\n\t{\n\t\t\"prefix\": 63,\n\t\t\"network\": \"hydradx\",\n\t\t\"displayName\": \"HydraDX\",\n\t\t\"symbols\": [\n\t\t\t\"HDX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://hydradx.io\"\n\t},\n\t{\n\t\t\"prefix\": 65,\n\t\t\"network\": \"aventus\",\n\t\t\"displayName\": \"AvN Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"AVT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://aventus.io\"\n\t},\n\t{\n\t\t\"prefix\": 66,\n\t\t\"network\": \"crust\",\n\t\t\"displayName\": \"Crust Network\",\n\t\t\"symbols\": [\n\t\t\t\"CRU\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://crust.network\"\n\t},\n\t{\n\t\t\"prefix\": 67,\n\t\t\"network\": \"genshiro\",\n\t\t\"displayName\": \"Genshiro Network\",\n\t\t\"symbols\": [\n\t\t\t\"GENS\",\n\t\t\t\"EQD\",\n\t\t\t\"LPT0\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9,\n\t\t\t9,\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://genshiro.equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 68,\n\t\t\"network\": \"equilibrium\",\n\t\t\"displayName\": \"Equilibrium Network\",\n\t\t\"symbols\": [\n\t\t\t\"EQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 69,\n\t\t\"network\": \"sora\",\n\t\t\"displayName\": \"SORA Network\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 71,\n\t\t\"network\": \"p3d\",\n\t\t\"displayName\": \"3DP network\",\n\t\t\"symbols\": [\n\t\t\t\"P3D\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://3dpass.org\"\n\t},\n\t{\n\t\t\"prefix\": 72,\n\t\t\"network\": \"p3dt\",\n\t\t\"displayName\": \"3DP test network\",\n\t\t\"symbols\": [\n\t\t\t\"P3Dt\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://3dpass.org\"\n\t},\n\t{\n\t\t\"prefix\": 73,\n\t\t\"network\": \"zeitgeist\",\n\t\t\"displayName\": \"Zeitgeist\",\n\t\t\"symbols\": [\n\t\t\t\"ZTG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zeitgeist.pm\"\n\t},\n\t{\n\t\t\"prefix\": 77,\n\t\t\"network\": \"manta\",\n\t\t\"displayName\": \"Manta network\",\n\t\t\"symbols\": [\n\t\t\t\"MANTA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 78,\n\t\t\"network\": \"calamari\",\n\t\t\"displayName\": \"Calamari: Manta Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"KMA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 88,\n\t\t\"network\": \"polkadex\",\n\t\t\"displayName\": \"Polkadex Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"PDEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadex.trade\"\n\t},\n\t{\n\t\t\"prefix\": 89,\n\t\t\"network\": \"polkadexparachain\",\n\t\t\"displayName\": \"Polkadex Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"PDEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadex.trade\"\n\t},\n\t{\n\t\t\"prefix\": 92,\n\t\t\"network\": \"anmol\",\n\t\t\"displayName\": \"Anmol Network\",\n\t\t\"symbols\": [\n\t\t\t\"ANML\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://anmol.network/\"\n\t},\n\t{\n\t\t\"prefix\": 93,\n\t\t\"network\": \"fragnova\",\n\t\t\"displayName\": \"Fragnova Network\",\n\t\t\"symbols\": [\n\t\t\t\"NOVA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://fragnova.com\"\n\t},\n\t{\n\t\t\"prefix\": 98,\n\t\t\"network\": \"polkasmith\",\n\t\t\"displayName\": \"PolkaSmith Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 99,\n\t\t\"network\": \"polkafoundry\",\n\t\t\"displayName\": \"PolkaFoundry Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKF\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 100,\n\t\t\"network\": \"ibtida\",\n\t\t\"displayName\": \"Anmol Network Ibtida Canary network\",\n\t\t\"symbols\": [\n\t\t\t\"IANML\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://anmol.network/\"\n\t},\n\t{\n\t\t\"prefix\": 101,\n\t\t\"network\": \"origintrail-parachain\",\n\t\t\"displayName\": \"OriginTrail Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"OTP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parachain.origintrail.io/\"\n\t},\n\t{\n\t\t\"prefix\": 105,\n\t\t\"network\": \"pontem-network\",\n\t\t\"displayName\": \"Pontem Network\",\n\t\t\"symbols\": [\n\t\t\t\"PONT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pontem.network\"\n\t},\n\t{\n\t\t\"prefix\": 110,\n\t\t\"network\": \"heiko\",\n\t\t\"displayName\": \"Heiko\",\n\t\t\"symbols\": [\n\t\t\t\"HKO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 113,\n\t\t\"network\": \"integritee-incognito\",\n\t\t\"displayName\": \"Integritee Incognito\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 117,\n\t\t\"network\": \"tinker\",\n\t\t\"displayName\": \"Tinker\",\n\t\t\"symbols\": [\n\t\t\t\"TNKR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://invarch.network\"\n\t},\n\t{\n\t\t\"prefix\": 126,\n\t\t\"network\": \"joystream\",\n\t\t\"displayName\": \"Joystream\",\n\t\t\"symbols\": [\n\t\t\t\"JOY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.joystream.org\"\n\t},\n\t{\n\t\t\"prefix\": 128,\n\t\t\"network\": \"clover\",\n\t\t\"displayName\": \"Clover Finance\",\n\t\t\"symbols\": [\n\t\t\t\"CLV\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://clover.finance\"\n\t},\n\t{\n\t\t\"prefix\": 129,\n\t\t\"network\": \"dorafactory-polkadot\",\n\t\t\"displayName\": \"Dorafactory Polkadot Network\",\n\t\t\"symbols\": [\n\t\t\t\"DORA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dorafactory.org\"\n\t},\n\t{\n\t\t\"prefix\": 131,\n\t\t\"network\": \"litmus\",\n\t\t\"displayName\": \"Litmus Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 136,\n\t\t\"network\": \"altair\",\n\t\t\"displayName\": \"Altair\",\n\t\t\"symbols\": [\n\t\t\t\"AIR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 172,\n\t\t\"network\": \"parallel\",\n\t\t\"displayName\": \"Parallel\",\n\t\t\"symbols\": [\n\t\t\t\"PARA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 252,\n\t\t\"network\": \"social-network\",\n\t\t\"displayName\": \"Social Network\",\n\t\t\"symbols\": [\n\t\t\t\"NET\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://social.network\"\n\t},\n\t{\n\t\t\"prefix\": 255,\n\t\t\"network\": \"quartz_mainnet\",\n\t\t\"displayName\": \"QUARTZ by UNIQUE\",\n\t\t\"symbols\": [\n\t\t\t\"QTZ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 268,\n\t\t\"network\": \"pioneer_network\",\n\t\t\"displayName\": \"Pioneer Network by Bit.Country\",\n\t\t\"symbols\": [\n\t\t\t\"NEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bit.country\"\n\t},\n\t{\n\t\t\"prefix\": 420,\n\t\t\"network\": \"sora_kusama_para\",\n\t\t\"displayName\": \"SORA Kusama Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 789,\n\t\t\"network\": \"geek\",\n\t\t\"displayName\": \"GEEK Network\",\n\t\t\"symbols\": [\n\t\t\t\"GEEK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://geek.gl\"\n\t},\n\t{\n\t\t\"prefix\": 1110,\n\t\t\"network\": \"efinity\",\n\t\t\"displayName\": \"Efinity\",\n\t\t\"symbols\": [\n\t\t\t\"EFI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://efinity.io/\"\n\t},\n\t{\n\t\t\"prefix\": 1221,\n\t\t\"network\": \"peaq\",\n\t\t\"displayName\": \"Peaq Network\",\n\t\t\"symbols\": [\n\t\t\t\"PEAQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://www.peaq.network/\"\n\t},\n\t{\n\t\t\"prefix\": 1222,\n\t\t\"network\": \"apex\",\n\t\t\"displayName\": \"Apex Network\",\n\t\t\"symbols\": [\n\t\t\t\"APEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://www.peaq.network/\"\n\t},\n\t{\n\t\t\"prefix\": 1284,\n\t\t\"network\": \"moonbeam\",\n\t\t\"displayName\": \"Moonbeam\",\n\t\t\"symbols\": [\n\t\t\t\"GLMR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1285,\n\t\t\"network\": \"moonriver\",\n\t\t\"displayName\": \"Moonriver\",\n\t\t\"symbols\": [\n\t\t\t\"MOVR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1328,\n\t\t\"network\": \"ajuna\",\n\t\t\"displayName\": \"Ajuna Network\",\n\t\t\"symbols\": [\n\t\t\t\"AJUN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ajuna.io\"\n\t},\n\t{\n\t\t\"prefix\": 1337,\n\t\t\"network\": \"bajun\",\n\t\t\"displayName\": \"Bajun Network\",\n\t\t\"symbols\": [\n\t\t\t\"BAJU\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ajuna.io\"\n\t},\n\t{\n\t\t\"prefix\": 1985,\n\t\t\"network\": \"seals\",\n\t\t\"displayName\": \"Seals Network\",\n\t\t\"symbols\": [\n\t\t\t\"SEAL\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://seals.app\"\n\t},\n\t{\n\t\t\"prefix\": 2007,\n\t\t\"network\": \"kapex\",\n\t\t\"displayName\": \"Kapex\",\n\t\t\"symbols\": [\n\t\t\t\"KAPEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 2032,\n\t\t\"network\": \"interlay\",\n\t\t\"displayName\": \"Interlay\",\n\t\t\"symbols\": [\n\t\t\t\"INTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2092,\n\t\t\"network\": \"kintsugi\",\n\t\t\"displayName\": \"Kintsugi\",\n\t\t\"symbols\": [\n\t\t\t\"KINT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2112,\n\t\t\"network\": \"chainflip\",\n\t\t\"displayName\": \"Chainflip\",\n\t\t\"symbols\": [\n\t\t\t\"FLIP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://chainflip.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2114,\n\t\t\"network\": \"Turing\",\n\t\t\"displayName\": \"Turing Network\",\n\t\t\"symbols\": [\n\t\t\t\"TUR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://oak.tech/turing/home/\"\n\t},\n\t{\n\t\t\"prefix\": 2207,\n\t\t\"network\": \"SNOW\",\n\t\t\"displayName\": \"SNOW: ICE Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"ICZ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://icenetwork.io\"\n\t},\n\t{\n\t\t\"prefix\": 2208,\n\t\t\"network\": \"ICE\",\n\t\t\"displayName\": \"ICE Network\",\n\t\t\"symbols\": [\n\t\t\t\"ICY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://icenetwork.io\"\n\t},\n\t{\n\t\t\"prefix\": 2254,\n\t\t\"network\": \"subspace_testnet\",\n\t\t\"displayName\": \"Subspace testnet\",\n\t\t\"symbols\": [\n\t\t\t\"tSSC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://subspace.network\"\n\t},\n\t{\n\t\t\"prefix\": 3000,\n\t\t\"network\": \"hashed\",\n\t\t\"displayName\": \"Hashed Network\",\n\t\t\"symbols\": [\n\t\t\t\"HASH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://hashed.network\"\n\t},\n\t{\n\t\t\"prefix\": 4000,\n\t\t\"network\": \"luhn\",\n\t\t\"displayName\": \"Luhn Network\",\n\t\t\"symbols\": [\n\t\t\t\"LUHN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://luhn.network\"\n\t},\n\t{\n\t\t\"prefix\": 4006,\n\t\t\"network\": \"tangle\",\n\t\t\"displayName\": \"Tangle Network\",\n\t\t\"symbols\": [\n\t\t\t\"TNT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.webb.tools/\"\n\t},\n\t{\n\t\t\"prefix\": 4450,\n\t\t\"network\": \"g1\",\n\t\t\"displayName\": \"Ğ1\",\n\t\t\"symbols\": [\n\t\t\t\"G1\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t2\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://duniter.org\"\n\t},\n\t{\n\t\t\"prefix\": 5234,\n\t\t\"network\": \"humanode\",\n\t\t\"displayName\": \"Humanode Network\",\n\t\t\"symbols\": [\n\t\t\t\"HMND\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://humanode.io\"\n\t},\n\t{\n\t\t\"prefix\": 6094,\n\t\t\"network\": \"subspace\",\n\t\t\"displayName\": \"Subspace\",\n\t\t\"symbols\": [\n\t\t\t\"SSC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://subspace.network\"\n\t},\n\t{\n\t\t\"prefix\": 7007,\n\t\t\"network\": \"tidefi\",\n\t\t\"displayName\": \"Tidefi\",\n\t\t\"symbols\": [\n\t\t\t\"TDFY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://tidefi.com\"\n\t},\n\t{\n\t\t\"prefix\": 7013,\n\t\t\"network\": \"gm\",\n\t\t\"displayName\": \"GM\",\n\t\t\"symbols\": [\n\t\t\t\"FREN\",\n\t\t\t\"GM\",\n\t\t\t\"GN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://gmordie.com\"\n\t},\n\t{\n\t\t\"prefix\": 7391,\n\t\t\"network\": \"unique_mainnet\",\n\t\t\"displayName\": \"Unique Network\",\n\t\t\"symbols\": [\n\t\t\t\"UNQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 8883,\n\t\t\"network\": \"sapphire_mainnet\",\n\t\t\"displayName\": \"Sapphire by Unique\",\n\t\t\"symbols\": [\n\t\t\t\"QTZ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 9807,\n\t\t\"network\": \"dentnet\",\n\t\t\"displayName\": \"DENTNet\",\n\t\t\"symbols\": [\n\t\t\t\"DENTX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.dentnet.io\"\n\t},\n\t{\n\t\t\"prefix\": 10041,\n\t\t\"network\": \"basilisk\",\n\t\t\"displayName\": \"Basilisk\",\n\t\t\"symbols\": [\n\t\t\t\"BSX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bsx.fi\"\n\t},\n\t{\n\t\t\"prefix\": 11330,\n\t\t\"network\": \"cess-testnet\",\n\t\t\"displayName\": \"CESS Testnet\",\n\t\t\"symbols\": [\n\t\t\t\"TCESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11331,\n\t\t\"network\": \"cess\",\n\t\t\"displayName\": \"CESS\",\n\t\t\"symbols\": [\n\t\t\t\"CESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11820,\n\t\t\"network\": \"contextfree\",\n\t\t\"displayName\": \"Automata ContextFree\",\n\t\t\"symbols\": [\n\t\t\t\"CTX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ata.network\"\n\t},\n\t{\n\t\t\"prefix\": 12191,\n\t\t\"network\": \"nftmart\",\n\t\t\"displayName\": \"NFTMart\",\n\t\t\"symbols\": [\n\t\t\t\"NMT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://nftmart.io\"\n\t}\n];\n","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// These match up with the keys of the ledgerApps object in the @polkadot/hw-ledger/defaults.ts\n// and maps to the known slip44 (minus the `0x8` hard derivation flag)\n//\n// NOTE: Any network here needs to have a genesisHash attached in the ./genesis.ts config\nexport const knownLedger = {\n  acala: 0x00000313,\n  'aleph-node': 0x00000283,\n  astar: 0x0000032a,\n  bifrost: 0x00000314,\n  'bifrost-kusama': 0x00000314,\n  centrifuge: 0x000002eb,\n  composable: 0x00000162,\n  'dock-mainnet': 0x00000252,\n  edgeware: 0x0000020b,\n  equilibrium: 0x05f5e0fd,\n  genshiro: 0x05f5e0fc,\n  'interlay-parachain': 0x00000162,\n  karura: 0x000002ae,\n  kusama: 0x000001b2,\n  'nodle-para': 0x000003eb,\n  parallel: 0x00000162,\n  polkadex: 0x0000031f,\n  polkadot: 0x00000162,\n  polymesh: 0x00000253,\n  sora: 0x00000269,\n  stafi: 0x0000038b,\n  statemine: 0x000001b2,\n  // common-good on Kusama, shares derivation\n  statemint: 0x00000162,\n  // common-good on Polkadot, shares derivation\n  unique: 0x00000162,\n  xxnetwork: 0x000007a3\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// NOTE: In the case where the network was hard-spooned and multiple genesisHashes\n// are provided, it needs to be in reverse order, i.e. most-recent first, oldest\n// last. This make lookups for the current a simple genesisHash[0]\n// (See Kusama as an example)\nexport const knownGenesis = {\n  acala: ['0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'],\n  'aleph-node': ['0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e'],\n  astar: ['0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'],\n  basilisk: ['0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755'],\n  bifrost: ['0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b'],\n  'bifrost-kusama': ['0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed'],\n  centrifuge: ['0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82', '0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5'],\n  composable: ['0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d'],\n  'dock-mainnet': ['0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae', '0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'],\n  edgeware: ['0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'],\n  equilibrium: ['0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'],\n  genshiro: ['0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243'],\n  hydradx: ['0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d', // HydraDX Parachain\n  '0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc', // Snakenet Gen3-1\n  '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9', // Snakenet Gen3\n  '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047', // Snakenet Gen2\n  '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1\n  ],\n  'interlay-parachain': ['0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72'],\n  karura: ['0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b'],\n  kulupu: ['0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'],\n  kusama: ['0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe', // Kusama CC3,\n  '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636', // Kusama CC2\n  '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1\n  ],\n  'nodle-para': ['0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21'],\n  parallel: ['0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97'],\n  picasso: ['0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c'],\n  polkadex: ['0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c'],\n  polkadot: ['0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'],\n  polymesh: ['0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063'],\n  rococo: ['0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e', '0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897', '0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770', '0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff', '0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a', '0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9', '0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779', '0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215', '0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9', '0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147', '0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd', '0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299'],\n  sora: ['0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5'],\n  stafi: ['0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80'],\n  statemine: ['0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a'],\n  statemint: ['0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f'],\n  subsocial: ['0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8'],\n  unique: ['0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31'],\n  westend: ['0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'],\n  xxnetwork: ['0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa']\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// these are icon overrides\nexport const knownIcon = {\n  centrifuge: 'polkadot',\n  kusama: 'polkadot',\n  polkadot: 'polkadot',\n  sora: 'polkadot',\n  statemine: 'polkadot',\n  statemint: 'polkadot',\n  westmint: 'polkadot'\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// testnets should not allow selection\nexport const knownTestnet = {\n  '': true,\n  // this is the default non-network entry\n  'cess-testnet': true,\n  'dock-testnet': true,\n  jupiter: true,\n  'mathchain-testnet': true,\n  p3dt: true,\n  subspace_testnet: true,\n  'zero-alphaville': true\n};","// Copyright 2017-2022 @polkadot/networks authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport knownSubstrate from '@substrate/ss58-registry';\nimport { knownGenesis, knownIcon, knownLedger, knownTestnet } from \"./defaults/index.js\"; // These are known prefixes that are not sorted\n\nconst UNSORTED = [0, 2, 42];\nconst TESTNETS = ['testnet'];\n\nfunction toExpanded(o) {\n  const network = o.network || '';\n  const nameParts = network.replace(/_/g, '-').split('-');\n  const n = o; // ledger additions\n\n  n.slip44 = knownLedger[network];\n  n.hasLedgerSupport = !!n.slip44; // general items\n\n  n.genesisHash = knownGenesis[network] || [];\n  n.icon = knownIcon[network] || 'substrate'; // filtering\n\n  n.isTestnet = !!knownTestnet[network] || TESTNETS.includes(nameParts[nameParts.length - 1]);\n  n.isIgnored = n.isTestnet || !(o.standardAccount && o.decimals && o.decimals.length && o.symbols && o.symbols.length) && o.prefix !== 42;\n  return n;\n}\n\nfunction filterSelectable({\n  genesisHash,\n  prefix\n}) {\n  return !!genesisHash.length || prefix === 42;\n}\n\nfunction filterAvailable(n) {\n  return !n.isIgnored && !!n.network;\n}\n\nfunction sortNetworks(a, b) {\n  const isUnSortedA = UNSORTED.includes(a.prefix);\n  const isUnSortedB = UNSORTED.includes(b.prefix);\n  return isUnSortedA === isUnSortedB ? isUnSortedA ? 0 : a.displayName.localeCompare(b.displayName) : isUnSortedA ? -1 : 1;\n} // This is all the Substrate networks with our additional information\n\n\nexport const allNetworks = knownSubstrate.map(toExpanded); // The list of available/claimed prefixes\n//   - no testnets\n//   - we only include those where we have a standardAccount\n//   - sort by name, however we keep 0, 2, 42 first in the list\n\nexport const availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks); // A filtered list of those chains we have details about (genesisHashes)\n\nexport const selectableNetworks = availableNetworks.filter(filterSelectable);","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { availableNetworks } from \"../networks.js\";\nexport const defaults = {\n  allowedDecodedLengths: [1, 2, 4, 8, 32, 33],\n  // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte\n  allowedEncodedLengths: [3, 4, 6, 10, 35, 36, 37, 38],\n  allowedPrefix: availableNetworks.map(({\n    prefix\n  }) => prefix),\n  prefix: 42\n};","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L6\nimport { isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { base58Decode } from \"../base58/index.js\";\nimport { checkAddressChecksum } from \"./checksum.js\";\nimport { defaults } from \"./defaults.js\";\nexport function decodeAddress(encoded, ignoreChecksum, ss58Format = -1) {\n  if (!encoded) {\n    throw new Error('Invalid empty address passed');\n  }\n\n  if (isU8a(encoded) || isHex(encoded)) {\n    return u8aToU8a(encoded);\n  }\n\n  try {\n    const decoded = base58Decode(encoded);\n\n    if (!defaults.allowedEncodedLengths.includes(decoded.length)) {\n      throw new Error('Invalid decoded address length');\n    }\n\n    const [isValid, endPos, ss58Length, ss58Decoded] = checkAddressChecksum(decoded);\n\n    if (!isValid && !ignoreChecksum) {\n      throw new Error('Invalid decoded address checksum');\n    } else if (ss58Format !== -1 && ss58Format !== ss58Decoded) {\n      throw new Error(`Expected ss58Format ${ss58Format}, received ${ss58Decoded}`);\n    }\n\n    return decoded.slice(ss58Length, endPos);\n  } catch (error) {\n    throw new Error(`Decoding ${encoded}: ${error.message}`);\n  }\n}","// Copyright 2017-2022 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Original implementation: https://github.com/paritytech/polka-ui/blob/4858c094684769080f5811f32b081dd7780b0880/src/polkadot.js#L34\nimport { u8aConcat } from '@polkadot/util';\nimport { base58Encode } from \"../base58/index.js\";\nimport { decodeAddress } from \"./decode.js\";\nimport { defaults } from \"./defaults.js\";\nimport { sshash } from \"./sshash.js\";\nexport function encodeAddress(key, ss58Format = defaults.prefix) {\n  // decode it, this means we can re-encode an address\n  const u8a = decodeAddress(key);\n\n  if (ss58Format < 0 || ss58Format > 16383 || [46, 47].includes(ss58Format)) {\n    throw new Error('Out of range ss58Format specified');\n  } else if (!defaults.allowedDecodedLengths.includes(u8a.length)) {\n    throw new Error(`Expected a valid key to convert, with length ${defaults.allowedDecodedLengths.join(', ')}`);\n  }\n\n  const input = u8aConcat(ss58Format < 64 ? [ss58Format] : [(ss58Format & 0b0000000011111100) >> 2 | 0b01000000, ss58Format >> 8 | (ss58Format & 0b0000000000000011) << 6], u8a);\n  return base58Encode(u8aConcat(input, sshash(input).subarray(0, [32, 33].includes(u8a.length) ? 2 : 1)));\n}","// Copyright 2019-2022 @polkadot/extension-dapp authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nexport function documentReadyPromise(creator) {\n  return new Promise(resolve => {\n    if (document.readyState === 'complete') {\n      resolve(creator());\n    } else {\n      window.addEventListener('load', () => resolve(creator()));\n    }\n  });\n}","// Copyright 2017-2022 @polkadot/extension-dapp authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Do not edit, auto-generated by @polkadot/dev\nexport const packageInfo = {\n  name: '@polkadot/extension-dapp',\n  path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto',\n  type: 'esm',\n  version: '0.44.6'\n};","// Copyright 2017-2022 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Originally from https://github.com/polkadot-js/extension/pull/743\nimport { u8aConcatStrict } from \"./concat.js\";\nimport { u8aEq } from \"./eq.js\";\nimport { u8aToU8a } from \"./toU8a.js\";\n/** @internal */\n\nexport const U8A_WRAP_ETHEREUM = u8aToU8a('\\x19Ethereum Signed Message:\\n');\n/** @internal */\n\nexport const U8A_WRAP_PREFIX = u8aToU8a('<Bytes>');\n/** @internal */\n\nexport const U8A_WRAP_POSTFIX = u8aToU8a('</Bytes>');\nconst WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;\n/** @internal */\n\nexport function u8aIsWrapped(u8a, withEthereum) {\n  return u8a.length >= WRAP_LEN && u8aEq(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) && u8aEq(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX) || withEthereum && u8a.length >= U8A_WRAP_ETHEREUM.length && u8aEq(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM);\n}\n/**\n * @name u8aUnwrapBytes\n * @description Removes all <Bytes>...</Bytes> wrappers from the supplied value\n */\n\nexport function u8aUnwrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes); // we don't want to unwrap Ethereum-style wraps\n\n  return u8aIsWrapped(u8a, false) ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length) : u8a;\n}\n/**\n * @name u8aWrapBytes\n * @description Adds a <Bytes>...</Bytes> wrapper to the supplied value (if not already existing)\n */\n\nexport function u8aWrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes); // if Ethereum-wrapping, we don't add our wrapping bytes\n\n  return u8aIsWrapped(u8a, true) ? u8a : u8aConcatStrict([U8A_WRAP_PREFIX, u8a, U8A_WRAP_POSTFIX]);\n}","// Copyright 2019-2022 @polkadot/extension authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { U8A_WRAP_ETHEREUM, U8A_WRAP_POSTFIX, U8A_WRAP_PREFIX, u8aIsWrapped, u8aUnwrapBytes, u8aWrapBytes } from '@polkadot/util';\nexport const ETHEREUM = U8A_WRAP_ETHEREUM;\nexport const POSTFIX = U8A_WRAP_POSTFIX;\nexport const PREFIX = U8A_WRAP_PREFIX;\nexport const isWrapped = u8aIsWrapped;\nexport const unwrapBytes = u8aUnwrapBytes;\nexport const wrapBytes = u8aWrapBytes;","// Copyright 2019-2022 @polkadot/extension-dapp authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aEq } from '@polkadot/util';\nimport { decodeAddress, encodeAddress } from '@polkadot/util-crypto';\nimport { documentReadyPromise } from \"./util.js\"; // expose utility functions\n\nexport { packageInfo } from \"./packageInfo.js\";\nexport { unwrapBytes, wrapBytes } from \"./wrapBytes.js\"; // just a helper (otherwise we cast all-over, so shorter and more readable)\n\nconst win = window; // don't clobber the existing object, but ensure non-undefined\n\nwin.injectedWeb3 = win.injectedWeb3 || {}; // true when anything has been injected and is available\n\nfunction web3IsInjected() {\n  return Object.keys(win.injectedWeb3).length !== 0;\n} // helper to throw a consistent error when not enabled\n\n\nfunction throwError(method) {\n  throw new Error(`${method}: web3Enable(originName) needs to be called before ${method}`);\n} // internal helper to map from Array<InjectedAccount> -> Array<InjectedAccountWithMeta>\n\n\nfunction mapAccounts(source, list, ss58Format) {\n  return list.map(({\n    address,\n    genesisHash,\n    name,\n    type\n  }) => ({\n    address: address.length === 42 ? address : encodeAddress(decodeAddress(address), ss58Format),\n    meta: {\n      genesisHash,\n      name,\n      source\n    },\n    type\n  }));\n} // have we found a properly constructed window.injectedWeb3\n\n\nlet isWeb3Injected = web3IsInjected(); // we keep the last promise created around (for queries)\n\nlet web3EnablePromise = null;\nexport { isWeb3Injected, web3EnablePromise };\n\nfunction getWindowExtensions(originName) {\n  return Promise.all(Object.entries(win.injectedWeb3).map(([name, {\n    enable,\n    version\n  }]) => Promise.all([Promise.resolve({\n    name,\n    version\n  }), enable(originName).catch(error => {\n    console.error(`Error initializing ${name}: ${error.message}`);\n  })])));\n} // enables all the providers found on the injected window interface\n\n\nexport function web3Enable(originName, compatInits = []) {\n  if (!originName) {\n    throw new Error('You must pass a name for your app to the web3Enable function');\n  }\n\n  const initCompat = compatInits.length ? Promise.all(compatInits.map(c => c().catch(() => false))) : Promise.resolve([true]);\n  web3EnablePromise = documentReadyPromise(() => initCompat.then(() => getWindowExtensions(originName).then(values => values.filter(value => !!value[1]).map(([info, ext]) => {\n    // if we don't have an accounts subscriber, add a single-shot version\n    if (!ext.accounts.subscribe) {\n      ext.accounts.subscribe = cb => {\n        ext.accounts.get().then(cb).catch(console.error);\n        return () => {// no ubsubscribe needed, this is a single-shot\n        };\n      };\n    }\n\n    return { ...info,\n      ...ext\n    };\n  })).catch(() => []).then(values => {\n    const names = values.map(({\n      name,\n      version\n    }) => `${name}/${version}`);\n    isWeb3Injected = web3IsInjected();\n    console.log(`web3Enable: Enabled ${values.length} extension${values.length !== 1 ? 's' : ''}: ${names.join(', ')}`);\n    return values;\n  })));\n  return web3EnablePromise;\n} // retrieve all the accounts across all providers\n\nexport async function web3Accounts({\n  accountType,\n  extensions,\n  ss58Format\n} = {}) {\n  if (!web3EnablePromise) {\n    return throwError('web3Accounts');\n  }\n\n  const accounts = [];\n  const injected = await web3EnablePromise;\n  const retrieved = await Promise.all(injected.filter(({\n    name: source\n  }) => !extensions || extensions.includes(source)).map(async ({\n    accounts,\n    name: source\n  }) => {\n    try {\n      const list = await accounts.get();\n      return mapAccounts(source, list.filter(({\n        type\n      }) => type && accountType ? accountType.includes(type) : true), ss58Format);\n    } catch (error) {\n      // cannot handle this one\n      return [];\n    }\n  }));\n  retrieved.forEach(result => {\n    accounts.push(...result);\n  });\n  const addresses = accounts.map(({\n    address\n  }) => address);\n  console.log(`web3Accounts: Found ${accounts.length} address${accounts.length !== 1 ? 'es' : ''}: ${addresses.join(', ')}`);\n  return accounts;\n}\nexport async function web3AccountsSubscribe(cb, {\n  extensions,\n  ss58Format\n} = {}) {\n  if (!web3EnablePromise) {\n    return throwError('web3AccountsSubscribe');\n  }\n\n  const accounts = {};\n\n  const triggerUpdate = () => cb(Object.entries(accounts).reduce((result, [source, list]) => {\n    result.push(...mapAccounts(source, list, ss58Format));\n    return result;\n  }, []));\n\n  const unsubs = (await web3EnablePromise).filter(({\n    name: source\n  }) => !extensions || extensions.includes(source)).map(({\n    accounts: {\n      subscribe\n    },\n    name: source\n  }) => subscribe(result => {\n    accounts[source] = result;\n\n    try {\n      var _triggerUpdate;\n\n      (_triggerUpdate = triggerUpdate()) === null || _triggerUpdate === void 0 ? void 0 : _triggerUpdate.catch(console.error);\n    } catch (error) {\n      console.error(error);\n    }\n  }));\n  return () => {\n    unsubs.forEach(unsub => {\n      unsub();\n    });\n  };\n} // find a specific provider based on the name\n\nexport async function web3FromSource(source) {\n  if (!web3EnablePromise) {\n    return throwError('web3FromSource');\n  }\n\n  const sources = await web3EnablePromise;\n  const found = source && sources.find(({\n    name\n  }) => name === source);\n\n  if (!found) {\n    throw new Error(`web3FromSource: Unable to find an injected ${source}`);\n  }\n\n  return found;\n} // find a specific provider based on an address\n\nexport async function web3FromAddress(address) {\n  if (!web3EnablePromise) {\n    return throwError('web3FromAddress');\n  }\n\n  const accounts = await web3Accounts();\n  let found;\n\n  if (address) {\n    const accountU8a = decodeAddress(address);\n    found = accounts.find(account => u8aEq(decodeAddress(account.address), accountU8a));\n  }\n\n  if (!found) {\n    throw new Error(`web3FromAddress: Unable to find injected ${address}`);\n  }\n\n  return web3FromSource(found.meta.source);\n} // retrieve all providers exposed by one source\n\nexport async function web3ListRpcProviders(source) {\n  const {\n    provider\n  } = await web3FromSource(source);\n\n  if (!provider) {\n    console.warn(`Extension ${source} does not expose any provider`);\n    return null;\n  }\n\n  return provider.listProviders();\n} // retrieve all providers exposed by one source\n\nexport async function web3UseRpcProvider(source, key) {\n  const {\n    provider\n  } = await web3FromSource(source);\n\n  if (!provider) {\n    throw new Error(`Extension ${source} does not expose any provider`);\n  }\n\n  const meta = await provider.startProvider(key);\n  return {\n    meta,\n    provider\n  };\n}"],"names":["CHR","U8","Array","U16","i","length","charCodeAt","toUpperCase","s","j","xglobal","globalThis","global","self","window","Function","extractGlobal","name","fallback","BigInt","asIntN","Number","NaN","hasBigInt","hasBuffer","Buffer","REGEX_HEX_PREFIXED","isHex","value","bitLength","ignoreLength","test","Math","ceil","isU8a","constructor","Uint8Array","encoder","encode","u8a","stringToU8a","toString","u8aToU8a","startsWith","decLength","endLength","result","hexToU8a","isFunction","readDoubleLE","isBuffer","isArray","u8aEq","a","b","u8aa","u8ab","dvA","DataView","buffer","byteOffset","dvB","mod","getUint32","u8aConcat","u8as","u8aConcatStrict","offset","set","assertNumber","n","isSafeInteger","Error","chain","wrap","c","args","from","reverse","reduce","acc","undefined","decode","alphabet","digits","map","input","letter","index","indexOf","join","separator","to","split","padding","bits","chr","data","push","end","slice","normalize","fn","convertRadix","pos","res","forEach","d","carry","done","digit","digitBase","floor","gcd","radix2carry","convertRadix2","mask","radix","num","bytes","radix2","revPadding","unsafeWrapper","apply","e","base16","base32","base64","replace","base64url","genBase58","abc","base58","XMR_BLOCK_LEN","base58xmr","block","subarray","padStart","str","blockLen","concat","BECH_ALPHABET","POLYMOD_GENERATORS","bech32Polymod","pre","chk","bechChecksum","prefix","words","encodingConst","len","v","genBech32","encoding","ENCODING_CONST","_words","fromWords","toWords","fromWordsUnsafe","limit","TypeError","lowered","toLowerCase","sepIndex","lastIndexOf","sum","endsWith","actualLength","decodeToBytes","decodeUnsafe","utf8","TextDecoder","TextEncoder","CODERS","hex","Object","keys","config","chars","coder","ipfs","type","base58Validate","ipfsCompat","includes","createValidate","base58Decode","validate","substring","createDecode","base58Encode","out","createEncode","number","lengths","assert","bool","hash","create","outputLen","exists","instance","checkFinished","destroyed","finished","output","min","u32","crypto","arr","Uint32Array","byteLength","toBytes","utf8ToBytes","SIGMA","U32_MASK64","_32n","fromBig","le","h","l","lst","Ah","Al","toBig","shrSH","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","add","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","IV","BUF","G1","msg","x","Xl","Xh","ll","u64","G2","BLAKE2b","clone","this","_cloneInto","opts","keyLen","saltLen","persLen","super","key","salt","personalization","buffer32","update","compress","take","dataOffset","data32","pos32","digestInto","fill","out32","get","digest","destroy","dkLen","v0l","v0h","v1l","v1h","v2l","v2h","v3l","v3h","v4l","v4h","v5l","v5h","v6l","v6h","v7l","v7h","keyLength","pers","tmp","isLast","blake2b","hashCons","hashC","wrapConstructorWithOpts","_classPrivateFieldInitSpec","obj","privateMap","privateCollection","has","_classExtractFieldDescriptor","receiver","action","_classPrivateFieldGet","descriptor","call","_classPrivateFieldSet","writable","decoder","_","String","fromCharCode","u8aToString","_defineProperty","defineProperty","enumerable","configurable","DEFAULT_CRYPTO","getRandomValues","DEFAULT_SELF","Wbg","bridge","idx","getObject","ptr","getString","addObject","_idx","_arg0","getU8a","_ptr","_len","takeObject","u8","u16","Uint16Array","clim","fleb","fdeb","freb","eb","start","r","fl","revfl","fd","rev","hMap","cd","mb","co","rvb","sv","m","flt","fdt","flrm","fdrm","p","o","bits16","max","inflt","dat","buf","st","noSt","sl","noBuf","cbuf","bl","nbuf","final","f","bt","lm","dm","lbt","dbt","tbts","t","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","dt","lms","dms","mxa","sym","dsym","slc","wasmBytes","byte","base64Decode","lenIn","lenOut","zlv","createWasm","root","asmFn","async","error","wasm","WebAssembly","instantiate","source","wbg","exports","message","console","createWasmFn","dropObject","ret","getInt32","memory","Int32Array","getUint8","allocU8a","arg","__wbindgen_malloc","allocString","resultU8a","r0","r1","__wbindgen_free","resultString","withWasm","params","ext_bip39_generate","phrase","ext_bip39_to_entropy","password","ext_bip39_to_mini_secret","ext_bip39_to_seed","ext_bip39_validate","seed","ext_ed_from_seed","pubkey","seckey","ext_ed_sign","signature","ext_ed_verify","ext_secp_from_seed","ext_secp_pub_compress","ext_secp_pub_expand","msgHash","sig","recovery","ext_secp_recover","ext_secp_sign","pair","cc","ext_sr_derive_keypair_hard","ext_sr_derive_keypair_soft","ext_sr_derive_public_soft","ext_sr_from_seed","secret","ext_sr_sign","ext_sr_verify","ext_sr_agree","context","extra","ext_vrf_sign","outAndProof","ext_vrf_verify","size","ext_blake2b","ext_hmac_sha256","ext_hmac_sha512","ext_keccak256","ext_keccak512","rounds","ext_pbkdf2","log2n","ext_scrypt","ext_sha256","ext_sha512","ext_twox","isReady","u8aToHex","isPrefixed","empty","blake2AsU8a","onlyJs","blake2bJs","SS58_PREFIX","sshash","checkAddressChecksum","decoded","ss58Length","ss58Decoded","isPublicKey","knownLedger","acala","astar","bifrost","centrifuge","composable","edgeware","equilibrium","genshiro","karura","kusama","parallel","polkadex","polkadot","polymesh","sora","stafi","statemine","statemint","unique","xxnetwork","knownGenesis","basilisk","hydradx","kulupu","picasso","rococo","subsocial","westend","knownIcon","westmint","knownTestnet","jupiter","p3dt","subspace_testnet","UNSORTED","TESTNETS","availableNetworks","knownSubstrate","network","nameParts","slip44","hasLedgerSupport","genesisHash","icon","isTestnet","isIgnored","standardAccount","decimals","symbols","filter","sort","isUnSortedA","displayName","localeCompare","defaults","allowedDecodedLengths","allowedEncodedLengths","allowedPrefix","decodeAddress","encoded","ignoreChecksum","ss58Format","isValid","endPos","encodeAddress","documentReadyPromise","creator","Promise","resolve","document","readyState","addEventListener","packageInfo","path","URL","import","pathname","version","U8A_WRAP_ETHEREUM","U8A_WRAP_PREFIX","U8A_WRAP_POSTFIX","WRAP_LEN","u8aIsWrapped","withEthereum","unwrapBytes","wrapBytes","win","web3IsInjected","injectedWeb3","throwError","method","mapAccounts","list","address","meta","isWeb3Injected","web3EnablePromise","getWindowExtensions","originName","all","entries","enable","catch","web3Enable","compatInits","initCompat","then","values","info","ext","accounts","subscribe","cb","names","log","web3Accounts","accountType","extensions","injected","retrieved","addresses","web3AccountsSubscribe","triggerUpdate","unsubs","_triggerUpdate","unsub","web3FromSource","sources","found","find","web3FromAddress","accountU8a","account","web3ListRpcProviders","provider","listProviders","warn","web3UseRpcProvider","startProvider"],"sourceRoot":""}